{
  "{\"sourceRoot\":\"/media/igor/DATA/Code/LoL Master/backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/DATA/Code/LoL Master/backend\",\"filename\":\"/media/igor/DATA/Code/LoL Master/backend/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/DATA/Code/LoL Master/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/DATA/Code/LoL Master/backend",
      "filename": "/media/igor/DATA/Code/LoL Master/backend/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/igor/DATA/Code/LoL Master/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/DATA/Code/LoL Master/backend/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/DATA/Code/LoL Master/backend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _kayn = require(\"kayn\");\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar apiKey = process.env.RIOT_LOL_API_KEY; //console.log('Riot API Key: ' + apiKey);\n\nvar redisCache = new _kayn.RedisCache({\n  host: 'localhost',\n  port: 6379,\n  keyPrefix: 'kayn' //password: 'hello-world',\n  // etc...\n\n});\nvar kayn = (0, _kayn.Kayn)(apiKey)({\n  region: _kayn.REGIONS.BRAZIL,\n  apiURLPrefix: 'https://%s.api.riotgames.com',\n  locale: 'pt_BR',\n  debugOptions: {\n    isEnabled: true,\n    showKey: false\n  },\n  requestOptions: {\n    shouldRetry: true,\n    numberOfRetriesBeforeAbort: 3,\n    delayBeforeRetry: 1000,\n    burst: false,\n    shouldExitOn403: false\n  },\n  cacheOptions: {\n    cache: redisCache,\n    timeToLives: {\n      useDefault: true,\n      byGroup: {\n        DDRAGON: 1000 * 60 * 60 * 24 * 30,\n        // cache for a month\n        MATCH: 1000 * 60 * 60 * 24,\n        SUMMONER: 1000 * 60 * 60 * 24\n      } // byMethod: {\n      //     [METHOD_NAMES.SUMMONER.GET_BY_SUMMONER_NAME]: 1000, // ms\n      //     [METHOD_NAMES.MATCH.GET_MATCHLIST]: 1000 * 60 * 10,\n      // },\n\n    }\n  }\n});\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.use(function (req, res, next) {\n  req.ddVersion = '9.22.1';\n  req.apiLang = 'pt_BR';\n  req.apiKey = apiKey;\n  req.kayn = kayn;\n  return next();\n});\napp.use(_routes[\"default\"]);\napp.listen(process.env.PORT, function () {\n  console.log(\"Server running on port \".concat(process.env.PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJSSU9UX0xPTF9BUElfS0VZIiwicmVkaXNDYWNoZSIsIlJlZGlzQ2FjaGUiLCJob3N0IiwicG9ydCIsImtleVByZWZpeCIsImtheW4iLCJyZWdpb24iLCJSRUdJT05TIiwiQlJBWklMIiwiYXBpVVJMUHJlZml4IiwibG9jYWxlIiwiZGVidWdPcHRpb25zIiwiaXNFbmFibGVkIiwic2hvd0tleSIsInJlcXVlc3RPcHRpb25zIiwic2hvdWxkUmV0cnkiLCJudW1iZXJPZlJldHJpZXNCZWZvcmVBYm9ydCIsImRlbGF5QmVmb3JlUmV0cnkiLCJidXJzdCIsInNob3VsZEV4aXRPbjQwMyIsImNhY2hlT3B0aW9ucyIsImNhY2hlIiwidGltZVRvTGl2ZXMiLCJ1c2VEZWZhdWx0IiwiYnlHcm91cCIsIkREUkFHT04iLCJNQVRDSCIsIlNVTU1PTkVSIiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwiZGRWZXJzaW9uIiwiYXBpTGFuZyIsInJvdXRlcyIsImxpc3RlbiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOztBQUVBOzs7O0FBR0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBRUEsSUFBTUMsTUFBTSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsZ0JBQTNCLEMsQ0FFQTs7QUFFQSxJQUFNQyxVQUFVLEdBQUcsSUFBSUMsZ0JBQUosQ0FBZTtBQUM5QkMsRUFBQUEsSUFBSSxFQUFFLFdBRHdCO0FBRTlCQyxFQUFBQSxJQUFJLEVBQUUsSUFGd0I7QUFHOUJDLEVBQUFBLFNBQVMsRUFBRSxNQUhtQixDQUk5QjtBQUNBOztBQUw4QixDQUFmLENBQW5CO0FBUUEsSUFBTUMsSUFBSSxHQUFHLGdCQUFLVCxNQUFMLEVBQWE7QUFDdEJVLEVBQUFBLE1BQU0sRUFBRUMsY0FBUUMsTUFETTtBQUV0QkMsRUFBQUEsWUFBWSxFQUFFLDhCQUZRO0FBR3RCQyxFQUFBQSxNQUFNLEVBQUUsT0FIYztBQUl0QkMsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZDLElBQUFBLFNBQVMsRUFBRSxJQUREO0FBRVZDLElBQUFBLE9BQU8sRUFBRTtBQUZDLEdBSlE7QUFRdEJDLEVBQUFBLGNBQWMsRUFBRTtBQUNaQyxJQUFBQSxXQUFXLEVBQUUsSUFERDtBQUVaQyxJQUFBQSwwQkFBMEIsRUFBRSxDQUZoQjtBQUdaQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQUhOO0FBSVpDLElBQUFBLEtBQUssRUFBRSxLQUpLO0FBS1pDLElBQUFBLGVBQWUsRUFBRTtBQUxMLEdBUk07QUFldEJDLEVBQUFBLFlBQVksRUFBRTtBQUNWQyxJQUFBQSxLQUFLLEVBQUVyQixVQURHO0FBRVZzQixJQUFBQSxXQUFXLEVBQUU7QUFDVEMsTUFBQUEsVUFBVSxFQUFFLElBREg7QUFFVEMsTUFBQUEsT0FBTyxFQUFFO0FBQ0xDLFFBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQVAsR0FBWSxFQUFaLEdBQWlCLEVBQWpCLEdBQXNCLEVBRDFCO0FBQzhCO0FBQ25DQyxRQUFBQSxLQUFLLEVBQUUsT0FBTyxFQUFQLEdBQVksRUFBWixHQUFpQixFQUZuQjtBQUdMQyxRQUFBQSxRQUFRLEVBQUUsT0FBTyxFQUFQLEdBQVksRUFBWixHQUFpQjtBQUh0QixPQUZBLENBUVQ7QUFDQTtBQUNBO0FBRUE7O0FBWlM7QUFGSDtBQWZRLENBQWIsQ0FBYjtBQW1DQWhDLEdBQUcsQ0FBQ2lDLEdBQUosQ0FBUSx1QkFBUjtBQUVBakMsR0FBRyxDQUFDaUMsR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSO0FBRUFuQyxHQUFHLENBQUNpQyxHQUFKLENBQVEsVUFBQ0csR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBa0I7QUFFdEJGLEVBQUFBLEdBQUcsQ0FBQ0csU0FBSixHQUFnQixRQUFoQjtBQUNBSCxFQUFBQSxHQUFHLENBQUNJLE9BQUosR0FBYyxPQUFkO0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ25DLE1BQUosR0FBYUEsTUFBYjtBQUNBbUMsRUFBQUEsR0FBRyxDQUFDMUIsSUFBSixHQUFXQSxJQUFYO0FBRUEsU0FBTzRCLElBQUksRUFBWDtBQUVILENBVEQ7QUFXQXRDLEdBQUcsQ0FBQ2lDLEdBQUosQ0FBUVEsa0JBQVI7QUFFQXpDLEdBQUcsQ0FBQzBDLE1BQUosQ0FBV3hDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZd0MsSUFBdkIsRUFBNEIsWUFBTTtBQUM5QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLGtDQUFzQzNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZd0MsSUFBbEQ7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9tZWRpYS9pZ29yL0RBVEEvQ29kZS9Mb0wgTWFzdGVyL2JhY2tlbmQvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdkb3RlbnYvY29uZmlnJztcblxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5cbmltcG9ydCB7IEtheW4sUkVHSU9OUyxNRVRIT0RfTkFNRVMsUmVkaXNDYWNoZSB9IGZyb20gJ2theW4nO1xuXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJztcblxuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52LlJJT1RfTE9MX0FQSV9LRVk7XG5cbi8vY29uc29sZS5sb2coJ1Jpb3QgQVBJIEtleTogJyArIGFwaUtleSk7XG5cbmNvbnN0IHJlZGlzQ2FjaGUgPSBuZXcgUmVkaXNDYWNoZSh7XG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgcG9ydDogNjM3OSxcbiAgICBrZXlQcmVmaXg6ICdrYXluJyxcbiAgICAvL3Bhc3N3b3JkOiAnaGVsbG8td29ybGQnLFxuICAgIC8vIGV0Yy4uLlxufSlcblxuY29uc3Qga2F5biA9IEtheW4oYXBpS2V5KSh7XG4gICAgcmVnaW9uOiBSRUdJT05TLkJSQVpJTCxcbiAgICBhcGlVUkxQcmVmaXg6ICdodHRwczovLyVzLmFwaS5yaW90Z2FtZXMuY29tJyxcbiAgICBsb2NhbGU6ICdwdF9CUicsXG4gICAgZGVidWdPcHRpb25zOiB7XG4gICAgICAgIGlzRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgc2hvd0tleTogZmFsc2UsXG4gICAgfSxcbiAgICByZXF1ZXN0T3B0aW9uczoge1xuICAgICAgICBzaG91bGRSZXRyeTogdHJ1ZSxcbiAgICAgICAgbnVtYmVyT2ZSZXRyaWVzQmVmb3JlQWJvcnQ6IDMsXG4gICAgICAgIGRlbGF5QmVmb3JlUmV0cnk6IDEwMDAsXG4gICAgICAgIGJ1cnN0OiBmYWxzZSxcbiAgICAgICAgc2hvdWxkRXhpdE9uNDAzOiBmYWxzZSxcbiAgICB9LFxuICAgIGNhY2hlT3B0aW9uczoge1xuICAgICAgICBjYWNoZTogcmVkaXNDYWNoZSxcbiAgICAgICAgdGltZVRvTGl2ZXM6IHtcbiAgICAgICAgICAgIHVzZURlZmF1bHQ6IHRydWUsXG4gICAgICAgICAgICBieUdyb3VwOiB7XG4gICAgICAgICAgICAgICAgRERSQUdPTjogMTAwMCAqIDYwICogNjAgKiAyNCAqIDMwLCAvLyBjYWNoZSBmb3IgYSBtb250aFxuICAgICAgICAgICAgICAgIE1BVENIOiAxMDAwICogNjAgKiA2MCAqIDI0LFxuICAgICAgICAgICAgICAgIFNVTU1PTkVSOiAxMDAwICogNjAgKiA2MCAqIDI0XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gYnlNZXRob2Q6IHtcbiAgICAgICAgICAgIC8vICAgICBbTUVUSE9EX05BTUVTLlNVTU1PTkVSLkdFVF9CWV9TVU1NT05FUl9OQU1FXTogMTAwMCwgLy8gbXNcbiAgICAgICAgICAgIC8vICAgICBbTUVUSE9EX05BTUVTLk1BVENILkdFVF9NQVRDSExJU1RdOiAxMDAwICogNjAgKiAxMCxcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIH0sXG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuXG5cbmFwcC51c2UoY29ycygpKTtcblxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5cbmFwcC51c2UoKHJlcSxyZXMsbmV4dCkgPT4ge1xuXG4gICAgcmVxLmRkVmVyc2lvbiA9ICc5LjIyLjEnO1xuICAgIHJlcS5hcGlMYW5nID0gJ3B0X0JSJztcbiAgICByZXEuYXBpS2V5ID0gYXBpS2V5O1xuICAgIHJlcS5rYXluID0ga2F5bjtcblxuICAgIHJldHVybiBuZXh0KCk7XG5cbn0pOyBcblxuYXBwLnVzZShyb3V0ZXMpO1xuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQsKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBwb3J0ICR7cHJvY2Vzcy5lbnYuUE9SVH1gKTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "apiKey",
        "process",
        "env",
        "RIOT_LOL_API_KEY",
        "redisCache",
        "RedisCache",
        "host",
        "port",
        "keyPrefix",
        "kayn",
        "region",
        "REGIONS",
        "BRAZIL",
        "apiURLPrefix",
        "locale",
        "debugOptions",
        "isEnabled",
        "showKey",
        "requestOptions",
        "shouldRetry",
        "numberOfRetriesBeforeAbort",
        "delayBeforeRetry",
        "burst",
        "shouldExitOn403",
        "cacheOptions",
        "cache",
        "timeToLives",
        "useDefault",
        "byGroup",
        "DDRAGON",
        "MATCH",
        "SUMMONER",
        "use",
        "express",
        "json",
        "req",
        "res",
        "next",
        "ddVersion",
        "apiLang",
        "routes",
        "listen",
        "PORT",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AAEA;;;;AAGA,IAAMA,GAAG,GAAG,0BAAZ;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA3B,C,CAEA;;AAEA,IAAMC,UAAU,GAAG,IAAIC,gBAAJ,CAAe;AAC9BC,EAAAA,IAAI,EAAE,WADwB;AAE9BC,EAAAA,IAAI,EAAE,IAFwB;AAG9BC,EAAAA,SAAS,EAAE,MAHmB,CAI9B;AACA;;AAL8B,CAAf,CAAnB;AAQA,IAAMC,IAAI,GAAG,gBAAKT,MAAL,EAAa;AACtBU,EAAAA,MAAM,EAAEC,cAAQC,MADM;AAEtBC,EAAAA,YAAY,EAAE,8BAFQ;AAGtBC,EAAAA,MAAM,EAAE,OAHc;AAItBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,IADD;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAJQ;AAQtBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,0BAA0B,EAAE,CAFhB;AAGZC,IAAAA,gBAAgB,EAAE,IAHN;AAIZC,IAAAA,KAAK,EAAE,KAJK;AAKZC,IAAAA,eAAe,EAAE;AALL,GARM;AAetBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAErB,UADG;AAEVsB,IAAAA,WAAW,EAAE;AACTC,MAAAA,UAAU,EAAE,IADH;AAETC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAE,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAD1B;AAC8B;AACnCC,QAAAA,KAAK,EAAE,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAFnB;AAGLC,QAAAA,QAAQ,EAAE,OAAO,EAAP,GAAY,EAAZ,GAAiB;AAHtB,OAFA,CAQT;AACA;AACA;AAEA;;AAZS;AAFH;AAfQ,CAAb,CAAb;AAmCAhC,GAAG,CAACiC,GAAJ,CAAQ,uBAAR;AAEAjC,GAAG,CAACiC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAnC,GAAG,CAACiC,GAAJ,CAAQ,UAACG,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAEtBF,EAAAA,GAAG,CAACG,SAAJ,GAAgB,QAAhB;AACAH,EAAAA,GAAG,CAACI,OAAJ,GAAc,OAAd;AACAJ,EAAAA,GAAG,CAACnC,MAAJ,GAAaA,MAAb;AACAmC,EAAAA,GAAG,CAAC1B,IAAJ,GAAWA,IAAX;AAEA,SAAO4B,IAAI,EAAX;AAEH,CATD;AAWAtC,GAAG,CAACiC,GAAJ,CAAQQ,kBAAR;AAEAzC,GAAG,CAAC0C,MAAJ,CAAWxC,OAAO,CAACC,GAAR,CAAYwC,IAAvB,EAA4B,YAAM;AAC9BC,EAAAA,OAAO,CAACC,GAAR,kCAAsC3C,OAAO,CAACC,GAAR,CAAYwC,IAAlD;AACH,CAFD",
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src",
      "sourcesContent": [
        "import 'dotenv/config';\n\nimport express from 'express';\nimport cors from 'cors';\nimport axios from 'axios';\n\nimport { Kayn,REGIONS,METHOD_NAMES,RedisCache } from 'kayn';\n\nimport routes from './routes';\n\n\nconst app = express();\n\nconst apiKey = process.env.RIOT_LOL_API_KEY;\n\n//console.log('Riot API Key: ' + apiKey);\n\nconst redisCache = new RedisCache({\n    host: 'localhost',\n    port: 6379,\n    keyPrefix: 'kayn',\n    //password: 'hello-world',\n    // etc...\n})\n\nconst kayn = Kayn(apiKey)({\n    region: REGIONS.BRAZIL,\n    apiURLPrefix: 'https://%s.api.riotgames.com',\n    locale: 'pt_BR',\n    debugOptions: {\n        isEnabled: true,\n        showKey: false,\n    },\n    requestOptions: {\n        shouldRetry: true,\n        numberOfRetriesBeforeAbort: 3,\n        delayBeforeRetry: 1000,\n        burst: false,\n        shouldExitOn403: false,\n    },\n    cacheOptions: {\n        cache: redisCache,\n        timeToLives: {\n            useDefault: true,\n            byGroup: {\n                DDRAGON: 1000 * 60 * 60 * 24 * 30, // cache for a month\n                MATCH: 1000 * 60 * 60 * 24,\n                SUMMONER: 1000 * 60 * 60 * 24\n                \n            },\n            // byMethod: {\n            //     [METHOD_NAMES.SUMMONER.GET_BY_SUMMONER_NAME]: 1000, // ms\n            //     [METHOD_NAMES.MATCH.GET_MATCHLIST]: 1000 * 60 * 10,\n                \n            // },\n        },\n    },\n});\n\n\napp.use(cors());\n\napp.use(express.json());\n\napp.use((req,res,next) => {\n\n    req.ddVersion = '9.22.1';\n    req.apiLang = 'pt_BR';\n    req.apiKey = apiKey;\n    req.kayn = kayn;\n\n    return next();\n\n}); \n\napp.use(routes);\n\napp.listen(process.env.PORT,() => {\n    console.log(`Server running on port ${process.env.PORT}`);\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1574559534490
  },
  "{\"sourceRoot\":\"/media/igor/DATA/Code/LoL Master/backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/DATA/Code/LoL Master/backend\",\"filename\":\"/media/igor/DATA/Code/LoL Master/backend/src/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/DATA/Code/LoL Master/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/DATA/Code/LoL Master/backend",
      "filename": "/media/igor/DATA/Code/LoL Master/backend/src/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/igor/DATA/Code/LoL Master/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/DATA/Code/LoL Master/backend/src/routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/DATA/Code/LoL Master/backend/src/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _kayn = require(\"kayn\");\n\nvar _MatchUtils = _interopRequireDefault(require(\"./util/MatchUtils\"));\n\nvar _ChampUtils = _interopRequireDefault(require(\"./util/ChampUtils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar routes = _express[\"default\"].Router();\n\nroutes.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var summoner, region, apiKey, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            summoner = req.query.s;\n            region = req.query.r;\n            apiKey = req.apiKey; //https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/RiotSchmick?api_key=<key>\n\n            _context.next = 5;\n            return _axios[\"default\"].get(\"https://\".concat(region, \".api.riotgames.com/lol/summoner/v4/summoners/by-name/\").concat(summoner, \"?api_key=\").concat(apiKey));\n\n          case 5:\n            response = _context.sent;\n            return _context.abrupt(\"return\", res.json(response.data));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nroutes.get('/killsDataset',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var file;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            file = \"\".concat(__dirname, \"/lol-dataset/kills.csv\");\n            res.download(file);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nroutes.get('/pickCount',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var kayn, summoner, apiLang, version, _ref4, id, accountId, _ref5, matches, gameIds, requests, matchs, mappedMatchs;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            kayn = req.kayn;\n            summoner = req.query.s;\n            apiLang = req.apiLang;\n            version = req.ddVersion;\n            _context4.prev = 4;\n            _context4.next = 7;\n            return kayn.Summoner.by.name(summoner);\n\n          case 7:\n            _ref4 = _context4.sent;\n            id = _ref4.id;\n            accountId = _ref4.accountId;\n            _context4.next = 12;\n            return kayn.Matchlist.by.accountID(accountId).query({\n              queue: 420\n            });\n\n          case 12:\n            _ref5 = _context4.sent;\n            matches = _ref5.matches;\n            gameIds = matches.map(function (_ref6) {\n              var gameId = _ref6.gameId;\n              return gameId;\n            });\n            requests = gameIds.map(kayn.Match.get);\n            _context4.next = 18;\n            return Promise.all(requests);\n\n          case 18:\n            matchs = _context4.sent;\n            _context4.next = 21;\n            return Promise.all(matchs.map(function (m) {\n              var participantId = _MatchUtils[\"default\"].getSummonerParticipantId(m, summoner);\n\n              var playerChamp = _MatchUtils[\"default\"].getPlayerChamp(m, participantId);\n\n              return {\n                champ: playerChamp\n              };\n            }));\n\n          case 21:\n            mappedMatchs = _context4.sent;\n            _context4.next = 24;\n            return Promise.all(mappedMatchs.map(\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(m) {\n                var champInfo;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _ChampUtils[\"default\"].getChampInfoById(m.champ, version, apiLang, kayn);\n\n                      case 2:\n                        champInfo = _context3.sent;\n                        return _context3.abrupt(\"return\", {\n                          champ: champInfo.name\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x7) {\n                return _ref7.apply(this, arguments);\n              };\n            }()));\n\n          case 24:\n            mappedMatchs = _context4.sent;\n            return _context4.abrupt(\"return\", res.json(mappedMatchs));\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](4);\n            return _context4.abrupt(\"return\", res.json(_context4.t0));\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 28]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nroutes.get('/kdaRank',\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var kayn, summoner, quantity, apiLang, version, _ref9, id, accountId, championIdMap, _ref10, matches, gameIds, requests, matchs, matchsMapped, kdaRank, listContainsChamp, finalRank, i;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            kayn = req.kayn;\n            summoner = req.query.s;\n            quantity = req.query.q;\n            apiLang = req.apiLang;\n            version = req.ddVersion;\n            _context6.next = 7;\n            return kayn.Summoner.by.name(summoner);\n\n          case 7:\n            _ref9 = _context6.sent;\n            id = _ref9.id;\n            accountId = _ref9.accountId;\n            _context6.next = 12;\n            return kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n          case 12:\n            championIdMap = _context6.sent;\n            _context6.next = 15;\n            return kayn.Matchlist.by.accountID(accountId).query({\n              queue: 420\n            });\n\n          case 15:\n            _ref10 = _context6.sent;\n            matches = _ref10.matches;\n            gameIds = matches.slice(0, quantity).map(function (_ref11) {\n              var gameId = _ref11.gameId;\n              return gameId;\n            });\n            requests = gameIds.map(kayn.Match.get);\n            _context6.next = 21;\n            return Promise.all(requests);\n\n          case 21:\n            matchs = _context6.sent;\n            _context6.next = 24;\n            return Promise.all(matchs.map(\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(match) {\n                var participantId, performance, playerChamp, champInfo, calculateKda;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        calculateKda = function _ref13(k, a, d) {\n                          var deaths = d > 0 ? d : 1;\n                          return (k + a) / deaths;\n                        };\n\n                        participantId = _MatchUtils[\"default\"].getSummonerParticipantId(match, summoner);\n                        performance = _MatchUtils[\"default\"].getPlayerPerformance(match, participantId);\n                        playerChamp = _MatchUtils[\"default\"].getPlayerChamp(match, participantId);\n                        _context5.next = 6;\n                        return _ChampUtils[\"default\"].getChampInfoById(playerChamp, version, apiLang, kayn);\n\n                      case 6:\n                        champInfo = _context5.sent;\n                        ;\n                        return _context5.abrupt(\"return\", {\n                          kda: calculateKda(performance.kills, performance.assists, performance.deaths),\n                          kills: performance.kills,\n                          assists: performance.assists,\n                          deaths: performance.deaths,\n                          champ: champInfo.name\n                        });\n\n                      case 9:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x10) {\n                return _ref12.apply(this, arguments);\n              };\n            }()));\n\n          case 24:\n            matchsMapped = _context6.sent;\n            kdaRank = matchsMapped.slice().sort(function (a, b) {\n              return b.kda - a.kda;\n            });\n\n            listContainsChamp = function listContainsChamp(list, champ) {\n              var res = false;\n              list.forEach(function (e) {\n                if (e.champ == champ) {\n                  res = true;\n                }\n              });\n              return res;\n            };\n\n            finalRank = [];\n            i = 0;\n\n          case 29:\n            if (!(i < kdaRank.length)) {\n              _context6.next = 36;\n              break;\n            }\n\n            if (!listContainsChamp(finalRank, kdaRank[i].champ)) {\n              finalRank.push(kdaRank[i]);\n            }\n\n            if (!(finalRank.length == 5)) {\n              _context6.next = 33;\n              break;\n            }\n\n            return _context6.abrupt(\"break\", 36);\n\n          case 33:\n            i++;\n            _context6.next = 29;\n            break;\n\n          case 36:\n            return _context6.abrupt(\"return\", res.json(finalRank));\n\n          case 37:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref8.apply(this, arguments);\n  };\n}());\nroutes.get('/damageRank',\n/*#__PURE__*/\nfunction () {\n  var _ref14 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(req, res) {\n    var kayn, summoner, quantity, apiLang, version, _ref15, id, accountId, championIdMap, _ref16, matches, gameIds, requests, matchs, matchsMapped, damageRank, listContainsChamp, finalRank, i;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            kayn = req.kayn;\n            summoner = req.query.s;\n            quantity = req.query.q;\n            apiLang = req.apiLang;\n            version = req.ddVersion;\n            _context8.next = 7;\n            return kayn.Summoner.by.name(summoner);\n\n          case 7:\n            _ref15 = _context8.sent;\n            id = _ref15.id;\n            accountId = _ref15.accountId;\n            _context8.next = 12;\n            return kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n          case 12:\n            championIdMap = _context8.sent;\n            _context8.next = 15;\n            return kayn.Matchlist.by.accountID(accountId).query({\n              queue: 420\n            });\n\n          case 15:\n            _ref16 = _context8.sent;\n            matches = _ref16.matches;\n            gameIds = matches.slice(0, quantity).map(function (_ref17) {\n              var gameId = _ref17.gameId;\n              return gameId;\n            });\n            requests = gameIds.map(kayn.Match.get);\n            _context8.next = 21;\n            return Promise.all(requests);\n\n          case 21:\n            matchs = _context8.sent;\n            _context8.next = 24;\n            return Promise.all(matchs.map(\n            /*#__PURE__*/\n            function () {\n              var _ref18 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(match) {\n                var participantId, performance, playerChamp, champInfo;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        participantId = _MatchUtils[\"default\"].getSummonerParticipantId(match, summoner);\n                        performance = _MatchUtils[\"default\"].getPlayerPerformance(match, participantId);\n                        playerChamp = _MatchUtils[\"default\"].getPlayerChamp(match, participantId);\n                        _context7.next = 5;\n                        return _ChampUtils[\"default\"].getChampInfoById(playerChamp, version, apiLang, kayn);\n\n                      case 5:\n                        champInfo = _context7.sent;\n                        return _context7.abrupt(\"return\", {\n                          damage: performance.damageDealt,\n                          champ: champInfo.name\n                        });\n\n                      case 7:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x13) {\n                return _ref18.apply(this, arguments);\n              };\n            }()));\n\n          case 24:\n            matchsMapped = _context8.sent;\n            damageRank = matchsMapped.slice().sort(function (a, b) {\n              return b.damage - a.damage;\n            });\n\n            listContainsChamp = function listContainsChamp(list, champ) {\n              var res = false;\n              list.forEach(function (e) {\n                if (e.champ == champ) {\n                  res = true;\n                }\n              });\n              return res;\n            };\n\n            finalRank = [];\n            i = 0;\n\n          case 29:\n            if (!(i < damageRank.length)) {\n              _context8.next = 36;\n              break;\n            }\n\n            if (!listContainsChamp(finalRank, damageRank[i].champ)) {\n              finalRank.push(damageRank[i]);\n            }\n\n            if (!(finalRank.length == 5)) {\n              _context8.next = 33;\n              break;\n            }\n\n            return _context8.abrupt(\"break\", 36);\n\n          case 33:\n            i++;\n            _context8.next = 29;\n            break;\n\n          case 36:\n            return _context8.abrupt(\"return\", res.json(finalRank));\n\n          case 37:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref14.apply(this, arguments);\n  };\n}());\nroutes.get('/matchTimeline',\n/*#__PURE__*/\nfunction () {\n  var _ref19 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee10(req, res) {\n    var kayn, matchId, summoner, apiLang, version, match, data, matchPlayerData, participantId, participantPos, participantDeaths;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            kayn = req.kayn;\n            matchId = req.query.matchId;\n            summoner = req.query.summoner;\n            apiLang = req.apiLang;\n            version = req.ddVersion;\n            _context10.prev = 5;\n            _context10.next = 8;\n            return kayn.Match.get(matchId);\n\n          case 8:\n            match = _context10.sent;\n            _context10.next = 11;\n            return kayn.Match.timeline(matchId);\n\n          case 11:\n            data = _context10.sent;\n            _context10.next = 14;\n            return _MatchUtils[\"default\"].extractPlayerData(match, summoner, version, apiLang, kayn);\n\n          case 14:\n            matchPlayerData = _context10.sent;\n            participantId = matchPlayerData.participantId;\n            participantPos = data.frames.map(function (f) {\n              return f.participantFrames[participantId];\n            });\n            participantDeaths = data.frames.filter(function (f) {\n              var hasAPlayerDeath = function hasAPlayerDeath(events, participantId) {\n                var result = false;\n                events.forEach(function (e) {\n                  if (e.type == \"CHAMPION_KILL\" && e.victimId == participantId) {\n                    result = true;\n                  }\n                });\n                return result;\n              };\n\n              return f.events.length > 0 && hasAPlayerDeath(f.events, participantId);\n            });\n            _context10.next = 20;\n            return Promise.all(participantDeaths.map(\n            /*#__PURE__*/\n            function () {\n              var _ref20 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee9(f) {\n                var result, killerChampId, killerChamp;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        result = undefined;\n                        f.events.forEach(function (e) {\n                          if (e.type == \"CHAMPION_KILL\" && e.victimId == participantId) {\n                            result = e;\n                          }\n                        });\n                        result.timestamp = f.timestamp;\n                        result.killerName = _MatchUtils[\"default\"].getParticipantSummonerName(match, result.killerId);\n                        killerChampId = _MatchUtils[\"default\"].getPlayerChamp(match, result.killerId);\n                        _context9.next = 7;\n                        return _ChampUtils[\"default\"].getChampInfoById(killerChampId, version, apiLang, kayn);\n\n                      case 7:\n                        killerChamp = _context9.sent;\n                        result.assistingParticipantNames = result.assistingParticipantIds.map(function (pid) {\n                          return _MatchUtils[\"default\"].getParticipantSummonerName(match, pid);\n                        });\n                        result.killerChamp = killerChamp;\n                        return _context9.abrupt(\"return\", result);\n\n                      case 11:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function (_x16) {\n                return _ref20.apply(this, arguments);\n              };\n            }()));\n\n          case 20:\n            participantDeaths = _context10.sent;\n            return _context10.abrupt(\"return\", res.json({\n              participantData: matchPlayerData,\n              participantDeaths: participantDeaths\n            }));\n\n          case 24:\n            _context10.prev = 24;\n            _context10.t0 = _context10[\"catch\"](5);\n            return _context10.abrupt(\"return\", res.json(_context10.t0));\n\n          case 27:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[5, 24]]);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref19.apply(this, arguments);\n  };\n}());\nroutes.get('/bestChamp',\n/*#__PURE__*/\nfunction () {\n  var _ref21 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11(req, res) {\n    var kayn, summoner, quantity, apiLang, version, _ref22, accountId, id, championMasteries, bestChampId, champInfo, champPerformance;\n\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            kayn = req.kayn;\n            summoner = req.query.s; //let region = req.query.r;\n\n            quantity = req.query.q;\n            apiLang = req.apiLang;\n            version = req.ddVersion;\n            _context11.prev = 5;\n            _context11.next = 8;\n            return kayn.Summoner.by.name(summoner);\n\n          case 8:\n            _ref22 = _context11.sent;\n            accountId = _ref22.accountId;\n            id = _ref22.id;\n            _context11.next = 13;\n            return kayn.ChampionMastery.list(id);\n\n          case 13:\n            championMasteries = _context11.sent;\n            bestChampId = championMasteries[0].championId;\n            _context11.next = 17;\n            return _ChampUtils[\"default\"].getChampInfoById(bestChampId, version, apiLang, kayn);\n\n          case 17:\n            champInfo = _context11.sent;\n            _context11.next = 20;\n            return _ChampUtils[\"default\"].getChampPerformance(summoner, bestChampId, kayn);\n\n          case 20:\n            champPerformance = _context11.sent;\n            return _context11.abrupt(\"return\", res.json({\n              imgUrl: \"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/\".concat(champInfo.name, \"_0.jpg\"),\n              info: champInfo,\n              perf: champPerformance\n            }));\n\n          case 24:\n            _context11.prev = 24;\n            _context11.t0 = _context11[\"catch\"](5);\n            return _context11.abrupt(\"return\", res.json(_context11.t0));\n\n          case 27:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[5, 24]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref21.apply(this, arguments);\n  };\n}());\nroutes.get('/matchHistory',\n/*#__PURE__*/\nfunction () {\n  var _ref23 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee13(req, res) {\n    var kayn, summoner, quantity, apiLang, version, _ref24, accountId, id, _ref25, matches, gameIds, requests, results, matchesMapped;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            kayn = req.kayn;\n            summoner = req.query.s; //let region = req.query.r;\n\n            quantity = req.query.q;\n            apiLang = req.apiLang;\n            version = req.ddVersion;\n            _context13.prev = 5;\n            _context13.next = 8;\n            return kayn.Summoner.by.name(summoner);\n\n          case 8:\n            _ref24 = _context13.sent;\n            accountId = _ref24.accountId;\n            id = _ref24.id;\n            _context13.next = 13;\n            return kayn.Matchlist.by.accountID(accountId).query({\n              queue: 420\n            });\n\n          case 13:\n            _ref25 = _context13.sent;\n            matches = _ref25.matches;\n            gameIds = matches.slice(0, quantity).map(function (_ref26) {\n              var gameId = _ref26.gameId;\n              return gameId;\n            });\n            requests = gameIds.map(kayn.Match.get);\n            _context13.next = 19;\n            return Promise.all(requests);\n\n          case 19:\n            results = _context13.sent;\n            _context13.next = 22;\n            return Promise.all(results.map(\n            /*#__PURE__*/\n            function () {\n              var _ref27 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee12(match) {\n                var playerInfo;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _context12.next = 2;\n                        return _MatchUtils[\"default\"].extractPlayerData(match, summoner, version, apiLang, kayn);\n\n                      case 2:\n                        playerInfo = _context12.sent;\n                        return _context12.abrupt(\"return\", playerInfo);\n\n                      case 4:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n\n              return function (_x21) {\n                return _ref27.apply(this, arguments);\n              };\n            }()));\n\n          case 22:\n            matchesMapped = _context13.sent;\n            matchesMapped = matchesMapped.sort(function (a, b) {\n              return a.gameCreation - b.gameCreation;\n            }); //console.log(id);\n\n            return _context13.abrupt(\"return\", res.json(matchesMapped));\n\n          case 27:\n            _context13.prev = 27;\n            _context13.t0 = _context13[\"catch\"](5);\n            return _context13.abrupt(\"return\", res.json(_context13.t0));\n\n          case 30:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[5, 27]]);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref23.apply(this, arguments);\n  };\n}());\nroutes.get('/kaynTest',\n/*#__PURE__*/\nfunction () {\n  var _ref28 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee14(req, res) {\n    var kayn, featuredMatches, match;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            kayn = req.kayn; // Note that the grabbing of a matchlist is currently limited by pagination.\n            // This API request only returns the first list. An enhanced version of this method\n            // will probably be included in the enhancer (which will be part of this library) called Rhaast.\n\n            _context14.prev = 1;\n            _context14.next = 4;\n            return kayn.FeaturedGamesV4.list();\n\n          case 4:\n            featuredMatches = _context14.sent;\n            match = featuredMatches.gameList[1];\n            res.json(match);\n            _context14.next = 12;\n            break;\n\n          case 9:\n            _context14.prev = 9;\n            _context14.t0 = _context14[\"catch\"](1);\n            return _context14.abrupt(\"return\", res.json(_context14.t0));\n\n          case 12:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[1, 9]]);\n  }));\n\n  return function (_x22, _x23) {\n    return _ref28.apply(this, arguments);\n  };\n}());\nroutes.get('/kaynTest2',\n/*#__PURE__*/\nfunction () {\n  var _ref29 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee15(req, res) {\n    var kayn, processMatch, championIdMap, _ref31, id, accountId, _ref32, matches, gameIds, matchDtos, processor, results, champMastery, championPerf;\n\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            kayn = req.kayn;\n\n            processMatch = function processMatch(championIdMap, summonerId, match) {\n              var _match$participantIde = match.participantIdentities.find(function (pi) {\n                return pi.player.summonerId === summonerId;\n              }),\n                  participantId = _match$participantIde.participantId;\n\n              var participant = match.participants.find(function (p) {\n                return p.participantId === participantId;\n              });\n              var champion = championIdMap.data[participant.championId];\n              return {\n                gameCreation: match.gameCreation,\n                seasonId: match.seasonId,\n                didWin: participant.teamId === match.teams.find(function (_ref30) {\n                  var win = _ref30.win;\n                  return win === 'Win';\n                }).teamId,\n                championId: participant.championId,\n                championName: champion.name\n              };\n            };\n\n            _context15.next = 4;\n            return kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n          case 4:\n            championIdMap = _context15.sent;\n            _context15.next = 7;\n            return kayn.Summoner.by.name('TMP Maker');\n\n          case 7:\n            _ref31 = _context15.sent;\n            id = _ref31.id;\n            accountId = _ref31.accountId;\n            _context15.next = 12;\n            return kayn.Matchlist.by.accountID(accountId).query({\n              queue: 420,\n              champion: 98\n            });\n\n          case 12:\n            _ref32 = _context15.sent;\n            matches = _ref32.matches;\n            gameIds = matches.slice(0, 100).map(function (_ref33) {\n              var gameId = _ref33.gameId;\n              return gameId;\n            });\n            _context15.next = 17;\n            return Promise.all(gameIds.map(kayn.Match.get));\n\n          case 17:\n            matchDtos = _context15.sent;\n\n            processor = function processor(match) {\n              return processMatch(championIdMap, id, match);\n            };\n\n            _context15.next = 21;\n            return Promise.all(matchDtos.map(processor));\n\n          case 21:\n            results = _context15.sent;\n            _context15.next = 24;\n            return kayn.ChampionMasteryV4.get(id)(98);\n\n          case 24:\n            champMastery = _context15.sent;\n            championPerf = {};\n            results.forEach(function (match) {\n              if (!championPerf[match.championId]) {\n                championPerf[match.championId] = {\n                  winRate: 0,\n                  championId: match.championId,\n                  championName: match.championName,\n                  championMastery: champMastery.championLevel,\n                  championMasteryPoints: champMastery.championPoints\n                };\n              }\n\n              if (!!match.didWin) {\n                championPerf[match.championId].winRate++;\n              }\n            });\n            championPerf[98].winRate /= results.length;\n            return _context15.abrupt(\"return\", res.json(championPerf));\n\n          case 29:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function (_x24, _x25) {\n    return _ref29.apply(this, arguments);\n  };\n}());\nroutes.get('/kaynTest3',\n/*#__PURE__*/\nfunction () {\n  var _ref34 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee17(req, res) {\n    var kayn, featuredMatches, match, matchPlayersPerf;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            kayn = req.kayn; // Note that the grabbing of a matchlist is currently limited by pagination.\n            // This API request only returns the first list. An enhanced version of this method\n            // will probably be included in the enhancer (which will be part of this library) called Rhaast.\n\n            _context17.prev = 1;\n            _context17.next = 4;\n            return kayn.FeaturedGamesV4.list();\n\n          case 4:\n            featuredMatches = _context17.sent;\n            match = featuredMatches.gameList[0]; //console.log(match);\n\n            _context17.next = 8;\n            return Promise.all(match.participants.map(\n            /*#__PURE__*/\n            function () {\n              var _ref35 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee16(participant) {\n                var playerPerf;\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        _context16.prev = 0;\n                        _context16.next = 3;\n                        return _ChampUtils[\"default\"].getChampPerformance(participant.summonerName, participant.championId, kayn);\n\n                      case 3:\n                        playerPerf = _context16.sent;\n                        console.log(playerPerf);\n                        return _context16.abrupt(\"return\", playerPerf);\n\n                      case 8:\n                        _context16.prev = 8;\n                        _context16.t0 = _context16[\"catch\"](0);\n                        console.log(_context16.t0);\n                        return _context16.abrupt(\"return\", null);\n\n                      case 12:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, _callee16, null, [[0, 8]]);\n              }));\n\n              return function (_x28) {\n                return _ref35.apply(this, arguments);\n              };\n            }()));\n\n          case 8:\n            matchPlayersPerf = _context17.sent;\n            console.log(matchPlayersPerf);\n            return _context17.abrupt(\"return\", res.json(matchPlayersPerf));\n\n          case 13:\n            _context17.prev = 13;\n            _context17.t0 = _context17[\"catch\"](1);\n            return _context17.abrupt(\"return\", res.json(_context17.t0));\n\n          case 16:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, null, [[1, 13]]);\n  }));\n\n  return function (_x26, _x27) {\n    return _ref34.apply(this, arguments);\n  };\n}());\nvar _default = routes;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "summoner",
        "query",
        "s",
        "region",
        "r",
        "apiKey",
        "axios",
        "response",
        "json",
        "data",
        "file",
        "__dirname",
        "download",
        "kayn",
        "apiLang",
        "version",
        "ddVersion",
        "Summoner",
        "by",
        "name",
        "id",
        "accountId",
        "Matchlist",
        "accountID",
        "queue",
        "matches",
        "gameIds",
        "map",
        "gameId",
        "requests",
        "Match",
        "Promise",
        "all",
        "matchs",
        "m",
        "participantId",
        "MatchUtils",
        "getSummonerParticipantId",
        "playerChamp",
        "getPlayerChamp",
        "champ",
        "mappedMatchs",
        "ChampUtils",
        "getChampInfoById",
        "champInfo",
        "quantity",
        "q",
        "DDragon",
        "Champion",
        "listDataByIdWithParentAsId",
        "championIdMap",
        "slice",
        "match",
        "calculateKda",
        "k",
        "a",
        "d",
        "deaths",
        "performance",
        "getPlayerPerformance",
        "kda",
        "kills",
        "assists",
        "matchsMapped",
        "kdaRank",
        "sort",
        "b",
        "listContainsChamp",
        "list",
        "forEach",
        "e",
        "finalRank",
        "i",
        "length",
        "push",
        "damage",
        "damageDealt",
        "damageRank",
        "matchId",
        "timeline",
        "extractPlayerData",
        "matchPlayerData",
        "participantPos",
        "frames",
        "f",
        "participantFrames",
        "participantDeaths",
        "filter",
        "hasAPlayerDeath",
        "events",
        "result",
        "type",
        "victimId",
        "undefined",
        "timestamp",
        "killerName",
        "getParticipantSummonerName",
        "killerId",
        "killerChampId",
        "killerChamp",
        "assistingParticipantNames",
        "assistingParticipantIds",
        "pid",
        "participantData",
        "ChampionMastery",
        "championMasteries",
        "bestChampId",
        "championId",
        "getChampPerformance",
        "champPerformance",
        "imgUrl",
        "info",
        "perf",
        "results",
        "playerInfo",
        "matchesMapped",
        "gameCreation",
        "FeaturedGamesV4",
        "featuredMatches",
        "gameList",
        "processMatch",
        "summonerId",
        "participantIdentities",
        "find",
        "pi",
        "player",
        "participant",
        "participants",
        "p",
        "champion",
        "seasonId",
        "didWin",
        "teamId",
        "teams",
        "win",
        "championName",
        "matchDtos",
        "processor",
        "ChampionMasteryV4",
        "champMastery",
        "championPerf",
        "winRate",
        "championMastery",
        "championLevel",
        "championMasteryPoints",
        "championPoints",
        "summonerName",
        "playerPerf",
        "console",
        "log",
        "matchPlayersPerf"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,QAFQ,GAEGF,GAAG,CAACG,KAAJ,CAAUC,CAFb;AAGRC,YAAAA,MAHQ,GAGCL,GAAG,CAACG,KAAJ,CAAUG,CAHX;AAIRC,YAAAA,MAJQ,GAICP,GAAG,CAACO,MAJL,EAMZ;;AANY;AAAA,mBAQWC,kBAAMT,GAAN,mBAAqBM,MAArB,kEAAmFH,QAAnF,sBAAuGK,MAAvG,EARX;;AAAA;AAQNE,YAAAA,QARM;AAAA,6CAULR,GAAG,CAACS,IAAJ,CAASD,QAAQ,CAACE,IAAlB,CAVK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;AAeAf,MAAM,CAACG,GAAP,CAAW,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBW,YAAAA,IAFkB,aAERC,SAFQ;AAGxBZ,YAAAA,GAAG,CAACa,QAAJ,CAAaF,IAAb;;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAOAhB,MAAM,CAACG,GAAP,CAAW,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEfc,YAAAA,IAFe,GAERf,GAAG,CAACe,IAFI;AAIjBb,YAAAA,QAJiB,GAINF,GAAG,CAACG,KAAJ,CAAUC,CAJJ;AAKjBY,YAAAA,OALiB,GAKPhB,GAAG,CAACgB,OALG;AAMjBC,YAAAA,OANiB,GAMPjB,GAAG,CAACkB,SANG;AAAA;AAAA;AAAA,mBAeeH,IAAI,CAACI,QAAL,CAAcC,EAAd,CAAiBC,IAAjB,CAAsBnB,QAAtB,CAff;;AAAA;AAAA;AAeToB,YAAAA,EAfS,SAeTA,EAfS;AAeLC,YAAAA,SAfK,SAeLA,SAfK;AAAA;AAAA,mBAkBSR,IAAI,CAACS,SAAL,CAAeJ,EAAf,CACrBK,SADqB,CACXF,SADW,EAErBpB,KAFqB,CAEf;AAAEuB,cAAAA,KAAK,EAAE;AAAT,aAFe,CAlBT;;AAAA;AAAA;AAkBTC,YAAAA,OAlBS,SAkBTA,OAlBS;AAuBXC,YAAAA,OAvBW,GAuBDD,OAAO,CAACE,GAAR,CAAY;AAAA,kBAAGC,MAAH,SAAGA,MAAH;AAAA,qBAAgBA,MAAhB;AAAA,aAAZ,CAvBC;AAwBXC,YAAAA,QAxBW,GAwBAH,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACiB,KAAL,CAAWjC,GAAvB,CAxBA;AAAA;AAAA,mBAyBIkC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAzBJ;;AAAA;AAyBXI,YAAAA,MAzBW;AAAA;AAAA,mBA2BQF,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACN,GAAP,CAAW,UAAAO,CAAC,EAAI;AAEjD,kBAAIC,aAAa,GAAGC,uBAAWC,wBAAX,CAAoCH,CAApC,EAAuClC,QAAvC,CAApB;;AAEA,kBAAIsC,WAAW,GAAGF,uBAAWG,cAAX,CAA0BL,CAA1B,EAA6BC,aAA7B,CAAlB;;AAEA,qBAAO;AAAEK,gBAAAA,KAAK,EAAEF;AAAT,eAAP;AAEH,aARoC,CAAZ,CA3BR;;AAAA;AA2BbG,YAAAA,YA3Ba;AAAA;AAAA,mBAqCIV,OAAO,CAACC,GAAR,CAAYS,YAAY,CAACd,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAiB,kBAAMO,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAExBQ,uBAAWC,gBAAX,CAA4BT,CAAC,CAACM,KAA9B,EAAqCzB,OAArC,EAA8CD,OAA9C,EAAuDD,IAAvD,CAFwB;;AAAA;AAE1C+B,wBAAAA,SAF0C;AAAA,0DAIvC;AAAEJ,0BAAAA,KAAK,EAACI,SAAS,CAACzB;AAAlB,yBAJuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjB;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CArCJ;;AAAA;AAqCjBsB,YAAAA,YArCiB;AAAA,8CAuEV1C,GAAG,CAACS,IAAJ,CAASiC,YAAT,CAvEU;;AAAA;AAAA;AAAA;AAAA,8CA2EV1C,GAAG,CAACS,IAAJ,cA3EU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AAoFAd,MAAM,CAACG,GAAP,CAAW,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEbc,YAAAA,IAFa,GAENf,GAAG,CAACe,IAFE;AAIfb,YAAAA,QAJe,GAIJF,GAAG,CAACG,KAAJ,CAAUC,CAJN;AAKf2C,YAAAA,QALe,GAKJ/C,GAAG,CAACG,KAAJ,CAAU6C,CALN;AAMfhC,YAAAA,OANe,GAMLhB,GAAG,CAACgB,OANC;AAOfC,YAAAA,OAPe,GAOLjB,GAAG,CAACkB,SAPC;AAAA;AAAA,mBASaH,IAAI,CAACI,QAAL,CAAcC,EAAd,CAAiBC,IAAjB,CAAsBnB,QAAtB,CATb;;AAAA;AAAA;AASXoB,YAAAA,EATW,SASXA,EATW;AASPC,YAAAA,SATO,SASPA,SATO;AAAA;AAAA,mBAWSR,IAAI,CAACkC,OAAL,CAAaC,QAAb,CAAsBC,0BAAtB,EAXT;;AAAA;AAWbC,YAAAA,aAXa;AAAA;AAAA,mBAaOrC,IAAI,CAACS,SAAL,CAAeJ,EAAf,CACrBK,SADqB,CACXF,SADW,EAErBpB,KAFqB,CAEf;AAAEuB,cAAAA,KAAK,EAAE;AAAT,aAFe,CAbP;;AAAA;AAAA;AAaXC,YAAAA,OAbW,UAaXA,OAbW;AAiBbC,YAAAA,OAjBa,GAiBHD,OAAO,CAAC0B,KAAR,CAAc,CAAd,EAAiBN,QAAjB,EAA2BlB,GAA3B,CAA+B;AAAA,kBAAGC,MAAH,UAAGA,MAAH;AAAA,qBAAgBA,MAAhB;AAAA,aAA/B,CAjBG;AAkBbC,YAAAA,QAlBa,GAkBFH,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACiB,KAAL,CAAWjC,GAAvB,CAlBE;AAAA;AAAA,mBAmBEkC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAnBF;;AAAA;AAmBbI,YAAAA,MAnBa;AAAA;AAAA,mBAuBQF,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACN,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAW,kBAAMyB,KAAN;AAAA,wEAUrCC,YAVqC;AAAA;AAAA;AAAA;AAAA;AAUrCA,wBAAAA,YAVqC,mBAUxBC,CAVwB,EAUrBC,CAVqB,EAUlBC,CAVkB,EAUf;AAE3B,8BAAIC,MAAM,GAAGD,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,CAAzB;AAEA,iCAAO,CAACF,CAAC,GAAGC,CAAL,IAAUE,MAAjB;AAEH,yBAhB6C;;AAE1CtB,wBAAAA,aAF0C,GAE1BC,uBAAWC,wBAAX,CAAoCe,KAApC,EAA2CpD,QAA3C,CAF0B;AAI1C0D,wBAAAA,WAJ0C,GAI5BtB,uBAAWuB,oBAAX,CAAgCP,KAAhC,EAAuCjB,aAAvC,CAJ4B;AAM1CG,wBAAAA,WAN0C,GAM5BF,uBAAWG,cAAX,CAA0Ba,KAA1B,EAAiCjB,aAAjC,CAN4B;AAAA;AAAA,+BAQxBO,uBAAWC,gBAAX,CAA4BL,WAA5B,EAAyCvB,OAAzC,EAAkDD,OAAlD,EAA2DD,IAA3D,CARwB;;AAAA;AAQ1C+B,wBAAAA,SAR0C;AAgB7C;AAhB6C,0DAkBvC;AAAEgB,0BAAAA,GAAG,EAAEP,YAAY,CAACK,WAAW,CAACG,KAAb,EAAoBH,WAAW,CAACI,OAAhC,EAAyCJ,WAAW,CAACD,MAArD,CAAnB;AAAiFI,0BAAAA,KAAK,EAAEH,WAAW,CAACG,KAApG;AAA2GC,0BAAAA,OAAO,EAAEJ,WAAW,CAACI,OAAhI;AAAyIL,0BAAAA,MAAM,EAAEC,WAAW,CAACD,MAA7J;AAAqKjB,0BAAAA,KAAK,EAAEI,SAAS,CAACzB;AAAtL,yBAlBuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CAvBR;;AAAA;AAuBb4C,YAAAA,YAvBa;AA6CfC,YAAAA,OA7Ce,GA6CLD,YAAY,CAACZ,KAAb,GAAqBc,IAArB,CAA0B,UAACV,CAAD,EAAIW,CAAJ;AAAA,qBAAUA,CAAC,CAACN,GAAF,GAAQL,CAAC,CAACK,GAApB;AAAA,aAA1B,CA7CK;;AA+CfO,YAAAA,iBA/Ce,GA+CK,SAApBA,iBAAoB,CAACC,IAAD,EAAO5B,KAAP,EAAiB;AAErC,kBAAIzC,GAAG,GAAG,KAAV;AAEAqE,cAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,CAAC,EAAI;AAEd,oBAAIA,CAAC,CAAC9B,KAAF,IAAWA,KAAf,EAAsB;AAElBzC,kBAAAA,GAAG,GAAG,IAAN;AAEH;AAEJ,eARD;AAUA,qBAAOA,GAAP;AAEH,aA/DkB;;AAiEfwE,YAAAA,SAjEe,GAiEH,EAjEG;AAmEVC,YAAAA,CAnEU,GAmEN,CAnEM;;AAAA;AAAA,kBAmEHA,CAAC,GAAGR,OAAO,CAACS,MAnET;AAAA;AAAA;AAAA;;AAqEf,gBAAI,CAACN,iBAAiB,CAACI,SAAD,EAAYP,OAAO,CAACQ,CAAD,CAAP,CAAWhC,KAAvB,CAAtB,EAAqD;AAEjD+B,cAAAA,SAAS,CAACG,IAAV,CAAeV,OAAO,CAACQ,CAAD,CAAtB;AAEH;;AAzEc,kBA2EXD,SAAS,CAACE,MAAV,IAAoB,CA3ET;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAmEiBD,YAAAA,CAAC,EAnElB;AAAA;AAAA;;AAAA;AAAA,8CAmFZzE,GAAG,CAACS,IAAJ,CAAS+D,SAAT,CAnFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAuFA7E,MAAM,CAACG,GAAP,CAAW,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEhBc,YAAAA,IAFgB,GAETf,GAAG,CAACe,IAFK;AAIlBb,YAAAA,QAJkB,GAIPF,GAAG,CAACG,KAAJ,CAAUC,CAJH;AAKlB2C,YAAAA,QALkB,GAKP/C,GAAG,CAACG,KAAJ,CAAU6C,CALH;AAMlBhC,YAAAA,OANkB,GAMRhB,GAAG,CAACgB,OANI;AAOlBC,YAAAA,OAPkB,GAORjB,GAAG,CAACkB,SAPI;AAAA;AAAA,mBASUH,IAAI,CAACI,QAAL,CAAcC,EAAd,CAAiBC,IAAjB,CAAsBnB,QAAtB,CATV;;AAAA;AAAA;AASdoB,YAAAA,EATc,UASdA,EATc;AASVC,YAAAA,SATU,UASVA,SATU;AAAA;AAAA,mBAWMR,IAAI,CAACkC,OAAL,CAAaC,QAAb,CAAsBC,0BAAtB,EAXN;;AAAA;AAWhBC,YAAAA,aAXgB;AAAA;AAAA,mBAaIrC,IAAI,CAACS,SAAL,CAAeJ,EAAf,CACrBK,SADqB,CACXF,SADW,EAErBpB,KAFqB,CAEf;AAAEuB,cAAAA,KAAK,EAAE;AAAT,aAFe,CAbJ;;AAAA;AAAA;AAadC,YAAAA,OAbc,UAadA,OAbc;AAiBhBC,YAAAA,OAjBgB,GAiBND,OAAO,CAAC0B,KAAR,CAAc,CAAd,EAAiBN,QAAjB,EAA2BlB,GAA3B,CAA+B;AAAA,kBAAGC,MAAH,UAAGA,MAAH;AAAA,qBAAgBA,MAAhB;AAAA,aAA/B,CAjBM;AAkBhBC,YAAAA,QAlBgB,GAkBLH,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACiB,KAAL,CAAWjC,GAAvB,CAlBK;AAAA;AAAA,mBAmBDkC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAnBC;;AAAA;AAmBhBI,YAAAA,MAnBgB;AAAA;AAAA,mBAqBKF,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACN,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAW,kBAAMyB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1CjB,wBAAAA,aAF0C,GAE1BC,uBAAWC,wBAAX,CAAoCe,KAApC,EAA2CpD,QAA3C,CAF0B;AAI1C0D,wBAAAA,WAJ0C,GAI5BtB,uBAAWuB,oBAAX,CAAgCP,KAAhC,EAAuCjB,aAAvC,CAJ4B;AAM1CG,wBAAAA,WAN0C,GAM5BF,uBAAWG,cAAX,CAA0Ba,KAA1B,EAAiCjB,aAAjC,CAN4B;AAAA;AAAA,+BAQxBO,uBAAWC,gBAAX,CAA4BL,WAA5B,EAAyCvB,OAAzC,EAAkDD,OAAlD,EAA2DD,IAA3D,CARwB;;AAAA;AAQ1C+B,wBAAAA,SAR0C;AAAA,0DAUvC;AAAE+B,0BAAAA,MAAM,EAAEjB,WAAW,CAACkB,WAAtB;AAAmCpC,0BAAAA,KAAK,EAAEI,SAAS,CAACzB;AAApD,yBAVuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CArBL;;AAAA;AAqBhB4C,YAAAA,YArBgB;AAmClBc,YAAAA,UAnCkB,GAmCLd,YAAY,CAACZ,KAAb,GAAqBc,IAArB,CAA0B,UAACV,CAAD,EAAIW,CAAJ;AAAA,qBAAUA,CAAC,CAACS,MAAF,GAAWpB,CAAC,CAACoB,MAAvB;AAAA,aAA1B,CAnCK;;AAsClBR,YAAAA,iBAtCkB,GAsCE,SAApBA,iBAAoB,CAACC,IAAD,EAAO5B,KAAP,EAAiB;AAErC,kBAAIzC,GAAG,GAAG,KAAV;AAEAqE,cAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,CAAC,EAAI;AAEd,oBAAIA,CAAC,CAAC9B,KAAF,IAAWA,KAAf,EAAsB;AAElBzC,kBAAAA,GAAG,GAAG,IAAN;AAEH;AAEJ,eARD;AAUA,qBAAOA,GAAP;AAEH,aAtDqB;;AAwDlBwE,YAAAA,SAxDkB,GAwDN,EAxDM;AA0DbC,YAAAA,CA1Da,GA0DT,CA1DS;;AAAA;AAAA,kBA0DNA,CAAC,GAAGK,UAAU,CAACJ,MA1DT;AAAA;AAAA;AAAA;;AA4DlB,gBAAI,CAACN,iBAAiB,CAACI,SAAD,EAAYM,UAAU,CAACL,CAAD,CAAV,CAAchC,KAA1B,CAAtB,EAAwD;AAEpD+B,cAAAA,SAAS,CAACG,IAAV,CAAeG,UAAU,CAACL,CAAD,CAAzB;AAEH;;AAhEiB,kBAkEdD,SAAS,CAACE,MAAV,IAAoB,CAlEN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA0DiBD,YAAAA,CAAC,EA1DlB;AAAA;AAAA;;AAAA;AAAA,8CA0EfzE,GAAG,CAACS,IAAJ,CAAS+D,SAAT,CA1Ee;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AA+EA7E,MAAM,CAACG,GAAP,CAAW,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6B,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBc,YAAAA,IAFmB,GAEZf,GAAG,CAACe,IAFQ;AAIrBiE,YAAAA,OAJqB,GAIXhF,GAAG,CAACG,KAAJ,CAAU6E,OAJC;AAKrB9E,YAAAA,QALqB,GAKVF,GAAG,CAACG,KAAJ,CAAUD,QALA;AAMrBc,YAAAA,OANqB,GAMXhB,GAAG,CAACgB,OANO;AAOrBC,YAAAA,OAPqB,GAOXjB,GAAG,CAACkB,SAPO;AAAA;AAAA;AAAA,mBAWDH,IAAI,CAACiB,KAAL,CAAWjC,GAAX,CAAeiF,OAAf,CAXC;;AAAA;AAWf1B,YAAAA,KAXe;AAAA;AAAA,mBAaFvC,IAAI,CAACiB,KAAL,CAAWiD,QAAX,CAAoBD,OAApB,CAbE;;AAAA;AAafrE,YAAAA,IAbe;AAAA;AAAA,mBAeS2B,uBAAW4C,iBAAX,CAA6B5B,KAA7B,EAAoCpD,QAApC,EAA8Ce,OAA9C,EAAuDD,OAAvD,EAAgED,IAAhE,CAfT;;AAAA;AAefoE,YAAAA,eAfe;AAiBf9C,YAAAA,aAjBe,GAiBC8C,eAAe,CAAC9C,aAjBjB;AAmBf+C,YAAAA,cAnBe,GAmBEzE,IAAI,CAAC0E,MAAL,CAAYxD,GAAZ,CAAgB,UAAAyD,CAAC,EAAI;AAExC,qBAAOA,CAAC,CAACC,iBAAF,CAAoBlD,aAApB,CAAP;AAEH,aAJsB,CAnBF;AAyBjBmD,YAAAA,iBAzBiB,GAyBG7E,IAAI,CAAC0E,MAAL,CAAYI,MAAZ,CAAmB,UAAAH,CAAC,EAAI;AAE5C,kBAAII,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAStD,aAAT,EAA2B;AAE7C,oBAAIuD,MAAM,GAAG,KAAb;AAEAD,gBAAAA,MAAM,CAACpB,OAAP,CAAe,UAAAC,CAAC,EAAI;AAEhB,sBAAIA,CAAC,CAACqB,IAAF,IAAU,eAAV,IAA6BrB,CAAC,CAACsB,QAAF,IAAczD,aAA/C,EAA8D;AAE1DuD,oBAAAA,MAAM,GAAG,IAAT;AAEH;AAEJ,iBARD;AAUA,uBAAOA,MAAP;AAEH,eAhBD;;AAkBA,qBAAON,CAAC,CAACK,MAAF,CAAShB,MAAT,GAAkB,CAAlB,IAAuBe,eAAe,CAACJ,CAAC,CAACK,MAAH,EAAWtD,aAAX,CAA7C;AAEH,aAtBuB,CAzBH;AAAA;AAAA,mBAiDKJ,OAAO,CAACC,GAAR,CAAYsD,iBAAiB,CAAC3D,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsB,kBAAMyD,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpDM,wBAAAA,MAFoD,GAE3CG,SAF2C;AAIxDT,wBAAAA,CAAC,CAACK,MAAF,CAASpB,OAAT,CAAiB,UAAAC,CAAC,EAAI;AAElB,8BAAIA,CAAC,CAACqB,IAAF,IAAU,eAAV,IAA6BrB,CAAC,CAACsB,QAAF,IAAczD,aAA/C,EAA8D;AAE1DuD,4BAAAA,MAAM,GAAGpB,CAAT;AAEH;AAEJ,yBARD;AAUAoB,wBAAAA,MAAM,CAACI,SAAP,GAAmBV,CAAC,CAACU,SAArB;AAGAJ,wBAAAA,MAAM,CAACK,UAAP,GAAoB3D,uBAAW4D,0BAAX,CAAsC5C,KAAtC,EAA6CsC,MAAM,CAACO,QAApD,CAApB;AAEIC,wBAAAA,aAnBoD,GAmBpC9D,uBAAWG,cAAX,CAA0Ba,KAA1B,EAAiCsC,MAAM,CAACO,QAAxC,CAnBoC;AAAA;AAAA,+BAsBhCvD,uBAAWC,gBAAX,CAA4BuD,aAA5B,EAA2CnF,OAA3C,EAAoDD,OAApD,EAA6DD,IAA7D,CAtBgC;;AAAA;AAsBpDsF,wBAAAA,WAtBoD;AAwBxDT,wBAAAA,MAAM,CAACU,yBAAP,GAAmCV,MAAM,CAACW,uBAAP,CAA+B1E,GAA/B,CAAmC,UAAA2E,GAAG;AAAA,iCAAIlE,uBAAW4D,0BAAX,CAAsC5C,KAAtC,EAA6CkD,GAA7C,CAAJ;AAAA,yBAAtC,CAAnC;AAEAZ,wBAAAA,MAAM,CAACS,WAAP,GAAqBA,WAArB;AA1BwD,0DA4BjDT,MA5BiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtB;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CAjDL;;AAAA;AAiDrBJ,YAAAA,iBAjDqB;AAAA,+CAiFdvF,GAAG,CAACS,IAAJ,CAAS;AAAE+F,cAAAA,eAAe,EAAEtB,eAAnB;AAAoCK,cAAAA,iBAAiB,EAAEA;AAAvD,aAAT,CAjFc;;AAAA;AAAA;AAAA;AAAA,+CAqFdvF,GAAG,CAACS,IAAJ,eArFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;AA6FAd,MAAM,CAACG,GAAP,CAAW,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEfc,YAAAA,IAFe,GAERf,GAAG,CAACe,IAFI;AAIjBb,YAAAA,QAJiB,GAINF,GAAG,CAACG,KAAJ,CAAUC,CAJJ,EAKrB;;AACI2C,YAAAA,QANiB,GAMN/C,GAAG,CAACG,KAAJ,CAAU6C,CANJ;AAOjBhC,YAAAA,OAPiB,GAOPhB,GAAG,CAACgB,OAPG;AAQjBC,YAAAA,OARiB,GAQPjB,GAAG,CAACkB,SARG;AAAA;AAAA;AAAA,mBAYeH,IAAI,CAACI,QAAL,CAAcC,EAAd,CAAiBC,IAAjB,CAAsBnB,QAAtB,CAZf;;AAAA;AAAA;AAYTqB,YAAAA,SAZS,UAYTA,SAZS;AAYED,YAAAA,EAZF,UAYEA,EAZF;AAAA;AAAA,mBAceP,IAAI,CAAC2F,eAAL,CAAqBpC,IAArB,CAA0BhD,EAA1B,CAdf;;AAAA;AAcXqF,YAAAA,iBAdW;AAgBXC,YAAAA,WAhBW,GAgBGD,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,UAhBxB;AAAA;AAAA,mBAkBOjE,uBAAWC,gBAAX,CAA4B+D,WAA5B,EAAyC3F,OAAzC,EAAkDD,OAAlD,EAA2DD,IAA3D,CAlBP;;AAAA;AAkBX+B,YAAAA,SAlBW;AAAA;AAAA,mBAoBcF,uBAAWkE,mBAAX,CAA+B5G,QAA/B,EAAyC0G,WAAzC,EAAsD7F,IAAtD,CApBd;;AAAA;AAoBXgG,YAAAA,gBApBW;AAAA,+CAyBV9G,GAAG,CAACS,IAAJ,CAAS;AAAEsG,cAAAA,MAAM,wEAAiElE,SAAS,CAACzB,IAA3E,WAAR;AAAiG4F,cAAAA,IAAI,EAAEnE,SAAvG;AAAkHoE,cAAAA,IAAI,EAAEH;AAAxH,aAAT,CAzBU;;AAAA;AAAA;AAAA;AAAA,+CA+BV9G,GAAG,CAACS,IAAJ,eA/BU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AAqCAd,MAAM,CAACG,GAAP,CAAW,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4B,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAElBc,YAAAA,IAFkB,GAEXf,GAAG,CAACe,IAFO;AAIpBb,YAAAA,QAJoB,GAITF,GAAG,CAACG,KAAJ,CAAUC,CAJD,EAKxB;;AACI2C,YAAAA,QANoB,GAMT/C,GAAG,CAACG,KAAJ,CAAU6C,CAND;AAOpBhC,YAAAA,OAPoB,GAOVhB,GAAG,CAACgB,OAPM;AAQpBC,YAAAA,OARoB,GAQVjB,GAAG,CAACkB,SARM;AAAA;AAAA;AAAA,mBAcYH,IAAI,CAACI,QAAL,CAAcC,EAAd,CAAiBC,IAAjB,CAAsBnB,QAAtB,CAdZ;;AAAA;AAAA;AAcZqB,YAAAA,SAdY,UAcZA,SAdY;AAcDD,YAAAA,EAdC,UAcDA,EAdC;AAAA;AAAA,mBAgBMP,IAAI,CAACS,SAAL,CAAeJ,EAAf,CACrBK,SADqB,CACXF,SADW,EAErBpB,KAFqB,CAEf;AAAEuB,cAAAA,KAAK,EAAE;AAAT,aAFe,CAhBN;;AAAA;AAAA;AAgBZC,YAAAA,OAhBY,UAgBZA,OAhBY;AAoBdC,YAAAA,OApBc,GAoBJD,OAAO,CAAC0B,KAAR,CAAc,CAAd,EAAiBN,QAAjB,EAA2BlB,GAA3B,CAA+B;AAAA,kBAAGC,MAAH,UAAGA,MAAH;AAAA,qBAAgBA,MAAhB;AAAA,aAA/B,CApBI;AAqBdC,YAAAA,QArBc,GAqBHH,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACiB,KAAL,CAAWjC,GAAvB,CArBG;AAAA;AAAA,mBAsBEkC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAtBF;;AAAA;AAsBdoF,YAAAA,OAtBc;AAAA;AAAA,mBAwBMlF,OAAO,CAACC,GAAR,CAAYiF,OAAO,CAACtF,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAY,mBAAMyB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEvBhB,uBAAW4C,iBAAX,CAA6B5B,KAA7B,EAAoCpD,QAApC,EAA8Ce,OAA9C,EAAuDD,OAAvD,EAAgED,IAAhE,CAFuB;;AAAA;AAE1CqG,wBAAAA,UAF0C;AAAA,2DAIvCA,UAJuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CAxBN;;AAAA;AAwBhBC,YAAAA,aAxBgB;AAgCpBA,YAAAA,aAAa,GAAGA,aAAa,CAAClD,IAAd,CAAmB,UAACV,CAAD,EAAGW,CAAH;AAAA,qBAASX,CAAC,CAAC6D,YAAF,GAAiBlD,CAAC,CAACkD,YAA5B;AAAA,aAAnB,CAAhB,CAhCoB,CAkCpB;;AAlCoB,+CAoCbrH,GAAG,CAACS,IAAJ,CAAS2G,aAAT,CApCa;;AAAA;AAAA;AAAA;AAAA,+CAwCbpH,GAAG,CAACS,IAAJ,eAxCa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAiDAd,MAAM,CAACG,GAAP,CAAW,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdc,YAAAA,IAFc,GAEPf,GAAG,CAACe,IAFG,EAKpB;AACA;AACA;;AAPoB;AAAA;AAAA,mBAYcA,IAAI,CAACwG,eAAL,CAAqBjD,IAArB,EAZd;;AAAA;AAYVkD,YAAAA,eAZU;AAcVlE,YAAAA,KAdU,GAcFkE,eAAe,CAACC,QAAhB,CAAyB,CAAzB,CAdE;AAgBhBxH,YAAAA,GAAG,CAACS,IAAJ,CAAS4C,KAAT;AAhBgB;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAoBTrD,GAAG,CAACS,IAAJ,eApBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;AA2BAd,MAAM,CAACG,GAAP,CAAW,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEfc,YAAAA,IAFe,GAERf,GAAG,CAACe,IAFI;;AAKf2G,YAAAA,YALe,GAKA,SAAfA,YAAe,CAACtE,aAAD,EAAgBuE,UAAhB,EAA4BrE,KAA5B,EAAsC;AAAA,0CAC7BA,KAAK,CAACsE,qBAAN,CAA4BC,IAA5B,CACtB,UAAAC,EAAE;AAAA,uBAAIA,EAAE,CAACC,MAAH,CAAUJ,UAAV,KAAyBA,UAA7B;AAAA,eADoB,CAD6B;AAAA,kBAC/CtF,aAD+C,yBAC/CA,aAD+C;;AAIvD,kBAAM2F,WAAW,GAAG1E,KAAK,CAAC2E,YAAN,CAAmBJ,IAAnB,CAChB,UAAAK,CAAC;AAAA,uBAAIA,CAAC,CAAC7F,aAAF,KAAoBA,aAAxB;AAAA,eADe,CAApB;AAGA,kBAAM8F,QAAQ,GAAG/E,aAAa,CAACzC,IAAd,CAAmBqH,WAAW,CAACnB,UAA/B,CAAjB;AACA,qBAAO;AACHS,gBAAAA,YAAY,EAAEhE,KAAK,CAACgE,YADjB;AAEHc,gBAAAA,QAAQ,EAAE9E,KAAK,CAAC8E,QAFb;AAGHC,gBAAAA,MAAM,EACFL,WAAW,CAACM,MAAZ,KACAhF,KAAK,CAACiF,KAAN,CAAYV,IAAZ,CAAiB;AAAA,sBAAGW,GAAH,UAAGA,GAAH;AAAA,yBAAaA,GAAG,KAAK,KAArB;AAAA,iBAAjB,EAA6CF,MAL9C;AAMHzB,gBAAAA,UAAU,EAAEmB,WAAW,CAACnB,UANrB;AAOH4B,gBAAAA,YAAY,EAAEN,QAAQ,CAAC9G;AAPpB,eAAP;AASH,aAtBoB;;AAAA;AAAA,mBAwBON,IAAI,CAACkC,OAAL,CAAaC,QAAb,CAAsBC,0BAAtB,EAxBP;;AAAA;AAwBfC,YAAAA,aAxBe;AAAA;AAAA,mBAyBWrC,IAAI,CAACI,QAAL,CAAcC,EAAd,CAAiBC,IAAjB,CAAsB,WAAtB,CAzBX;;AAAA;AAAA;AAyBbC,YAAAA,EAzBa,UAyBbA,EAzBa;AAyBTC,YAAAA,SAzBS,UAyBTA,SAzBS;AAAA;AAAA,mBA0BKR,IAAI,CAACS,SAAL,CAAeJ,EAAf,CACrBK,SADqB,CACXF,SADW,EAErBpB,KAFqB,CAEf;AAAEuB,cAAAA,KAAK,EAAE,GAAT;AAAcyG,cAAAA,QAAQ,EAAE;AAAxB,aAFe,CA1BL;;AAAA;AAAA;AA0BbxG,YAAAA,OA1Ba,UA0BbA,OA1Ba;AA6BfC,YAAAA,OA7Be,GA6BLD,OAAO,CAAC0B,KAAR,CAAc,CAAd,EAAiB,GAAjB,EAAsBxB,GAAtB,CAA0B;AAAA,kBAAGC,MAAH,UAAGA,MAAH;AAAA,qBAAgBA,MAAhB;AAAA,aAA1B,CA7BK;AAAA;AAAA,mBA8BGG,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACiB,KAAL,CAAWjC,GAAvB,CAAZ,CA9BH;;AAAA;AA8Bf2I,YAAAA,SA9Be;;AAgCfC,YAAAA,SAhCe,GAgCH,SAAZA,SAAY,CAAArF,KAAK;AAAA,qBAAIoE,YAAY,CAACtE,aAAD,EAAgB9B,EAAhB,EAAoBgC,KAApB,CAAhB;AAAA,aAhCF;;AAAA;AAAA,mBAiCCrB,OAAO,CAACC,GAAR,CAAYwG,SAAS,CAAC7G,GAAV,CAAc8G,SAAd,CAAZ,CAjCD;;AAAA;AAiCfxB,YAAAA,OAjCe;AAAA;AAAA,mBAmCMpG,IAAI,CAAC6H,iBAAL,CAAuB7I,GAAvB,CAA2BuB,EAA3B,EAA+B,EAA/B,CAnCN;;AAAA;AAmCfuH,YAAAA,YAnCe;AAqCjBC,YAAAA,YArCiB,GAqCF,EArCE;AA0CrB3B,YAAAA,OAAO,CAAC5C,OAAR,CACI,UAAAjB,KAAK,EAAI;AAEL,kBAAI,CAACwF,YAAY,CAACxF,KAAK,CAACuD,UAAP,CAAjB,EAAqC;AAEjCiC,gBAAAA,YAAY,CAACxF,KAAK,CAACuD,UAAP,CAAZ,GAAiC;AAC7BkC,kBAAAA,OAAO,EAAE,CADoB;AAE7BlC,kBAAAA,UAAU,EAAEvD,KAAK,CAACuD,UAFW;AAG7B4B,kBAAAA,YAAY,EAAEnF,KAAK,CAACmF,YAHS;AAI7BO,kBAAAA,eAAe,EAAEH,YAAY,CAACI,aAJD;AAK7BC,kBAAAA,qBAAqB,EAAEL,YAAY,CAACM;AALP,iBAAjC;AAQH;;AAED,kBAAI,CAAC,CAAC7F,KAAK,CAAC+E,MAAZ,EAAoB;AAEhBS,gBAAAA,YAAY,CAACxF,KAAK,CAACuD,UAAP,CAAZ,CAA+BkC,OAA/B;AAEH;AAGJ,aAtBL;AA0BAD,YAAAA,YAAY,CAAC,EAAD,CAAZ,CAAiBC,OAAjB,IAA4B5B,OAAO,CAACxC,MAApC;AApEqB,+CAsEd1E,GAAG,CAACS,IAAJ,CAASoI,YAAT,CAtEc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AA0EAlJ,MAAM,CAACG,GAAP,CAAW,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfc,YAAAA,IAFe,GAERf,GAAG,CAACe,IAFI,EAKrB;AACA;AACA;;AAPqB;AAAA;AAAA,mBAYaA,IAAI,CAACwG,eAAL,CAAqBjD,IAArB,EAZb;;AAAA;AAYXkD,YAAAA,eAZW;AAcXlE,YAAAA,KAdW,GAcHkE,eAAe,CAACC,QAAhB,CAAyB,CAAzB,CAdG,EAgBjB;;AAhBiB;AAAA,mBAkBcxF,OAAO,CAACC,GAAR,CAAYoB,KAAK,CAAC2E,YAAN,CAAmBpG,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sCACvC,mBAAOmG,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAI+BpF,uBAAWkE,mBAAX,CAA+BkB,WAAW,CAACoB,YAA3C,EAAyDpB,WAAW,CAACnB,UAArE,EAAiF9F,IAAjF,CAJ/B;;AAAA;AAIYsI,wBAAAA,UAJZ;AAMQC,wBAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AANR,2DAQeA,UARf;;AAAA;AAAA;AAAA;AAaQC,wBAAAA,OAAO,CAACC,GAAR;AAbR,2DAee,IAff;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADuC;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CAlBd;;AAAA;AAkBXC,YAAAA,gBAlBW;AAuCjBF,YAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AAvCiB,+CAyCVvJ,GAAG,CAACS,IAAJ,CAAS8I,gBAAT,CAzCU;;AAAA;AAAA;AAAA;AAAA,+CA6CVvJ,GAAG,CAACS,IAAJ,eA7CU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;eAqDed,M",
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src",
      "sourcesContent": [
        "import express from 'express';\nimport axios from 'axios';\n\nimport { REGIONS } from 'kayn';\n\nimport MatchUtils from './util/MatchUtils';\nimport ChampUtils from './util/ChampUtils';\n\nconst routes = express.Router();\n\nroutes.get('/', async (req, res) => {\n\n    let summoner = req.query.s;\n    let region = req.query.r;\n    let apiKey = req.apiKey;\n\n    //https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/RiotSchmick?api_key=<key>\n\n    const response = await axios.get(`https://${region}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summoner}?api_key=${apiKey}`);\n\n    return res.json(response.data);\n\n\n});\n\nroutes.get('/killsDataset', async (req, res) => {\n\n    const file = `${__dirname}/lol-dataset/kills.csv`;\n    res.download(file);\n\n});\n\nroutes.get('/pickCount', async (req, res) => {\n\n    const kayn = req.kayn;\n\n    let summoner = req.query.s;\n    let apiLang = req.apiLang;\n    let version = req.ddVersion;\n\n\n\n    try {\n\n\n\n\n        const { id, accountId } = await kayn.Summoner.by.name(summoner);\n\n\n        const { matches } = await kayn.Matchlist.by\n            .accountID(accountId)\n            .query({ queue: 420 });\n\n\n        const gameIds = matches.map(({ gameId }) => gameId);\n        const requests = gameIds.map(kayn.Match.get);\n        const matchs = await Promise.all(requests);\n\n        let mappedMatchs = await Promise.all(matchs.map(m => {\n\n            let participantId = MatchUtils.getSummonerParticipantId(m, summoner);\n\n            let playerChamp = MatchUtils.getPlayerChamp(m, participantId);\n\n            return { champ: playerChamp };\n\n        }));\n\n        mappedMatchs = await Promise.all(mappedMatchs.map(async m => {\n\n            let champInfo = await ChampUtils.getChampInfoById(m.champ, version, apiLang, kayn);\n\n            return { champ:champInfo.name };\n\n        }))\n\n        // const pickCount = {};\n\n        // mappedMatchs.forEach(m => {\n\n        //     if (!!pickCount[m.champ]) {\n\n        //         pickCount[m.champ].count++;\n\n        //     } else {\n\n        //         pickCount[m.champ] = { count: 1 };\n\n        //     }\n\n        // });\n\n        // const pickCountList = await Promise.all(Object.keys(pickCount).map(async champId => {\n\n        //     let champInfo = await ChampUtils.getChampInfoById(champId, version, apiLang, kayn);\n\n        //     return { champ: champInfo, count: pickCount[champId].count };\n\n        // }));\n\n\n\n        return res.json(mappedMatchs);\n\n    } catch (error) {\n\n        return res.json(error);\n\n    }\n\n\n\n\n});\n\nroutes.get('/kdaRank', async (req, res) => {\n\n    const kayn = req.kayn;\n\n    let summoner = req.query.s;\n    let quantity = req.query.q;\n    let apiLang = req.apiLang;\n    let version = req.ddVersion;\n\n    const { id, accountId } = await kayn.Summoner.by.name(summoner);\n\n    const championIdMap = await kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n    const { matches } = await kayn.Matchlist.by\n        .accountID(accountId)\n        .query({ queue: 420 });\n\n    const gameIds = matches.slice(0, quantity).map(({ gameId }) => gameId);\n    const requests = gameIds.map(kayn.Match.get);\n    const matchs = await Promise.all(requests);\n\n\n\n    const matchsMapped = await Promise.all(matchs.map(async match => {\n\n        let participantId = MatchUtils.getSummonerParticipantId(match, summoner);\n\n        let performance = MatchUtils.getPlayerPerformance(match, participantId);\n\n        let playerChamp = MatchUtils.getPlayerChamp(match, participantId);\n\n        let champInfo = await ChampUtils.getChampInfoById(playerChamp, version, apiLang, kayn);\n\n        function calculateKda(k, a, d) {\n\n            let deaths = d > 0 ? d : 1;\n\n            return (k + a) / deaths;\n\n        };\n\n        return { kda: calculateKda(performance.kills, performance.assists, performance.deaths), kills: performance.kills, assists: performance.assists, deaths: performance.deaths, champ: champInfo.name };\n\n    }));\n\n    let kdaRank = matchsMapped.slice().sort((a, b) => b.kda - a.kda);\n\n    let listContainsChamp = (list, champ) => {\n\n        let res = false;\n\n        list.forEach(e => {\n\n            if (e.champ == champ) {\n\n                res = true;\n\n            }\n\n        });\n\n        return res;\n\n    };\n\n    let finalRank = [];\n\n    for (let i = 0; i < kdaRank.length; i++) {\n\n        if (!listContainsChamp(finalRank, kdaRank[i].champ)) {\n\n            finalRank.push(kdaRank[i]);\n\n        }\n\n        if (finalRank.length == 5) {\n\n            break;\n\n        }\n\n    }\n\n    return res.json(finalRank);\n\n});\n\nroutes.get('/damageRank', async (req, res) => {\n\n    const kayn = req.kayn;\n\n    let summoner = req.query.s;\n    let quantity = req.query.q;\n    let apiLang = req.apiLang;\n    let version = req.ddVersion;\n\n    const { id, accountId } = await kayn.Summoner.by.name(summoner);\n\n    const championIdMap = await kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n    const { matches } = await kayn.Matchlist.by\n        .accountID(accountId)\n        .query({ queue: 420 });\n\n    const gameIds = matches.slice(0, quantity).map(({ gameId }) => gameId);\n    const requests = gameIds.map(kayn.Match.get);\n    const matchs = await Promise.all(requests);\n\n    const matchsMapped = await Promise.all(matchs.map(async match => {\n\n        let participantId = MatchUtils.getSummonerParticipantId(match, summoner);\n\n        let performance = MatchUtils.getPlayerPerformance(match, participantId);\n\n        let playerChamp = MatchUtils.getPlayerChamp(match, participantId);\n\n        let champInfo = await ChampUtils.getChampInfoById(playerChamp, version, apiLang, kayn);\n\n        return { damage: performance.damageDealt, champ: champInfo.name };\n\n    }));\n\n    let damageRank = matchsMapped.slice().sort((a, b) => b.damage - a.damage);\n\n\n    let listContainsChamp = (list, champ) => {\n\n        let res = false;\n\n        list.forEach(e => {\n\n            if (e.champ == champ) {\n\n                res = true;\n\n            }\n\n        });\n\n        return res;\n\n    };\n\n    let finalRank = [];\n\n    for (let i = 0; i < damageRank.length; i++) {\n\n        if (!listContainsChamp(finalRank, damageRank[i].champ)) {\n\n            finalRank.push(damageRank[i]);\n\n        }\n\n        if (finalRank.length == 5) {\n\n            break;\n\n        }\n\n    }\n\n    return res.json(finalRank);\n\n\n});\n\nroutes.get('/matchTimeline', async (req, res) => {\n\n    const kayn = req.kayn;\n\n    let matchId = req.query.matchId;\n    let summoner = req.query.summoner;\n    let apiLang = req.apiLang;\n    let version = req.ddVersion;\n\n    try {\n\n        const match = await kayn.Match.get(matchId);\n\n        const data = await kayn.Match.timeline(matchId);\n\n        const matchPlayerData = await MatchUtils.extractPlayerData(match, summoner, version, apiLang, kayn);\n\n        const participantId = matchPlayerData.participantId;\n\n        const participantPos = data.frames.map(f => {\n\n            return f.participantFrames[participantId];\n\n        });\n\n        let participantDeaths = data.frames.filter(f => {\n\n            let hasAPlayerDeath = (events, participantId) => {\n\n                let result = false;\n\n                events.forEach(e => {\n\n                    if (e.type == \"CHAMPION_KILL\" && e.victimId == participantId) {\n\n                        result = true;\n\n                    }\n\n                });\n\n                return result;\n\n            };\n\n            return f.events.length > 0 && hasAPlayerDeath(f.events, participantId);\n\n        });\n\n        participantDeaths = await Promise.all(participantDeaths.map(async f => {\n\n            let result = undefined;\n\n            f.events.forEach(e => {\n\n                if (e.type == \"CHAMPION_KILL\" && e.victimId == participantId) {\n\n                    result = e;\n\n                }\n\n            });\n\n            result.timestamp = f.timestamp;\n\n\n            result.killerName = MatchUtils.getParticipantSummonerName(match, result.killerId);\n\n            let killerChampId = MatchUtils.getPlayerChamp(match, result.killerId);\n\n\n            let killerChamp = await ChampUtils.getChampInfoById(killerChampId, version, apiLang, kayn);\n\n            result.assistingParticipantNames = result.assistingParticipantIds.map(pid => MatchUtils.getParticipantSummonerName(match, pid));\n\n            result.killerChamp = killerChamp;\n\n            return result;\n\n        }));\n\n        return res.json({ participantData: matchPlayerData, participantDeaths: participantDeaths });\n\n    } catch (error) {\n\n        return res.json(error);\n\n    }\n\n\n\n});\n\nroutes.get('/bestChamp', async (req, res) => {\n\n    const kayn = req.kayn;\n\n    let summoner = req.query.s;\n    //let region = req.query.r;\n    let quantity = req.query.q;\n    let apiLang = req.apiLang;\n    let version = req.ddVersion;\n\n    try {\n\n        const { accountId, id } = await kayn.Summoner.by.name(summoner);\n\n        const championMasteries = await kayn.ChampionMastery.list(id);\n\n        const bestChampId = championMasteries[0].championId;\n\n        const champInfo = await ChampUtils.getChampInfoById(bestChampId, version, apiLang, kayn);\n\n        const champPerformance = await ChampUtils.getChampPerformance(summoner, bestChampId, kayn);\n\n\n\n\n        return res.json({ imgUrl: `http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champInfo.name}_0.jpg`, info: champInfo, perf: champPerformance });\n\n\n\n    } catch (error) {\n\n        return res.json(error);\n\n    }\n\n});\n\nroutes.get('/matchHistory', async (req, res) => {\n\n    const kayn = req.kayn;\n\n    let summoner = req.query.s;\n    //let region = req.query.r;\n    let quantity = req.query.q;\n    let apiLang = req.apiLang;\n    let version = req.ddVersion;\n\n\n    try {\n\n\n        const { accountId, id } = await kayn.Summoner.by.name(summoner);\n\n        const { matches } = await kayn.Matchlist.by\n            .accountID(accountId)\n            .query({ queue: 420 });\n\n        const gameIds = matches.slice(0, quantity).map(({ gameId }) => gameId);\n        const requests = gameIds.map(kayn.Match.get);\n        const results = await Promise.all(requests);\n\n        let matchesMapped = await Promise.all(results.map(async match => {\n\n            let playerInfo = await MatchUtils.extractPlayerData(match, summoner, version, apiLang, kayn);\n\n            return playerInfo;\n\n        }));\n\n        matchesMapped = matchesMapped.sort((a,b) => a.gameCreation - b.gameCreation);\n\n        //console.log(id);\n\n        return res.json(matchesMapped);\n\n    } catch (error) {\n\n        return res.json(error);\n\n    }\n\n\n\n\n});\n\nroutes.get('/kaynTest', async (req, res) => {\n\n    const kayn = req.kayn;\n\n\n    // Note that the grabbing of a matchlist is currently limited by pagination.\n    // This API request only returns the first list. An enhanced version of this method\n    // will probably be included in the enhancer (which will be part of this library) called Rhaast.\n\n    try {\n\n\n        const featuredMatches = await kayn.FeaturedGamesV4.list();\n\n        const match = featuredMatches.gameList[1];\n\n        res.json(match);\n\n    } catch (error) {\n\n        return res.json(error);\n\n    }\n\n\n});\n\nroutes.get('/kaynTest2', async (req, res) => {\n\n    const kayn = req.kayn;\n\n\n    const processMatch = (championIdMap, summonerId, match) => {\n        const { participantId } = match.participantIdentities.find(\n            pi => pi.player.summonerId === summonerId,\n        )\n        const participant = match.participants.find(\n            p => p.participantId === participantId,\n        )\n        const champion = championIdMap.data[participant.championId]\n        return {\n            gameCreation: match.gameCreation,\n            seasonId: match.seasonId,\n            didWin:\n                participant.teamId ===\n                match.teams.find(({ win }) => win === 'Win').teamId,\n            championId: participant.championId,\n            championName: champion.name,\n        }\n    }\n\n    const championIdMap = await kayn.DDragon.Champion.listDataByIdWithParentAsId()\n    const { id, accountId } = await kayn.Summoner.by.name('TMP Maker')\n    const { matches } = await kayn.Matchlist.by\n        .accountID(accountId)\n        .query({ queue: 420, champion: 98 })\n    const gameIds = matches.slice(0, 100).map(({ gameId }) => gameId)\n    const matchDtos = await Promise.all(gameIds.map(kayn.Match.get))\n    // `processor` is a helper function to make the subsequent `map` cleaner.\n    const processor = match => processMatch(championIdMap, id, match)\n    const results = await Promise.all(matchDtos.map(processor));\n\n    const champMastery = await kayn.ChampionMasteryV4.get(id)(98);\n\n    let championPerf = {};\n\n\n\n\n    results.forEach(\n        match => {\n\n            if (!championPerf[match.championId]) {\n\n                championPerf[match.championId] = {\n                    winRate: 0,\n                    championId: match.championId,\n                    championName: match.championName,\n                    championMastery: champMastery.championLevel,\n                    championMasteryPoints: champMastery.championPoints\n                };\n\n            }\n\n            if (!!match.didWin) {\n\n                championPerf[match.championId].winRate++;\n\n            }\n\n\n        }\n\n    );\n\n    championPerf[98].winRate /= results.length;\n\n    return res.json(championPerf);\n\n});\n\nroutes.get('/kaynTest3', async (req, res) => {\n\n    const kayn = req.kayn;\n\n\n    // Note that the grabbing of a matchlist is currently limited by pagination.\n    // This API request only returns the first list. An enhanced version of this method\n    // will probably be included in the enhancer (which will be part of this library) called Rhaast.\n\n    try {\n\n\n        const featuredMatches = await kayn.FeaturedGamesV4.list();\n\n        const match = featuredMatches.gameList[0];\n\n        //console.log(match);\n\n        const matchPlayersPerf = await Promise.all(match.participants.map(\n            async (participant) => {\n\n                try {\n\n                    let playerPerf = await ChampUtils.getChampPerformance(participant.summonerName, participant.championId, kayn);\n\n                    console.log(playerPerf);\n\n                    return playerPerf;\n\n\n                } catch (error) {\n\n                    console.log(error);\n\n                    return null;\n                }\n            }\n        ));\n\n        console.log(matchPlayersPerf);\n\n        return res.json(matchPlayersPerf);\n\n    } catch (error) {\n\n        return res.json(error);\n\n    }\n\n\n});\n\n\nexport default routes;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574645149805
  },
  "{\"sourceRoot\":\"/media/igor/DATA/Code/LoL Master/backend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/DATA/Code/LoL Master/backend\",\"filename\":\"/media/igor/DATA/Code/LoL Master/backend/src/util/MatchUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/DATA/Code/LoL Master/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/DATA/Code/LoL Master/backend",
      "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/MatchUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/igor/DATA/Code/LoL Master/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/DATA/Code/LoL Master/backend/src/util/MatchUtils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/MatchUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
        "sourceFileName": "MatchUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ChampUtils = _interopRequireDefault(require(\"./ChampUtils\"));\n\nvar _SummonerSpellUtils = _interopRequireDefault(require(\"./SummonerSpellUtils\"));\n\nvar _ItemUtils = _interopRequireDefault(require(\"./ItemUtils\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _asyncIterator(iterable) { var method; if (typeof Symbol !== \"undefined\") { if (Symbol.asyncIterator) { method = iterable[Symbol.asyncIterator]; if (method != null) return method.call(iterable); } if (Symbol.iterator) { method = iterable[Symbol.iterator]; if (method != null) return method.call(iterable); } } throw new TypeError(\"Object is not async iterable\"); }\n\nvar MatchUtils = {};\n\nfunction getSummonerParticipantId(match, summoner) {\n  var participantId = undefined;\n  match.participantIdentities.forEach(function (participant) {\n    if (participant.player.summonerName == summoner) {\n      participantId = participant.participantId;\n    }\n  });\n  return participantId;\n}\n\nfunction getParticipantSummonerName(match, participantId) {\n  var summoner = undefined;\n  match.participantIdentities.forEach(function (participant) {\n    if (participant.participantId == participantId) {\n      summoner = participant.player.summonerName;\n    }\n  });\n  return summoner;\n}\n\nMatchUtils.getSummonerParticipantId = getSummonerParticipantId;\nMatchUtils.getParticipantSummonerName = getParticipantSummonerName;\n\nfunction getParticipantTeam(match, participantId) {\n  var participantTeam = undefined;\n  match.participants.forEach(function (participant) {\n    if (participant.participantId == participantId) {\n      participantTeam = participant.teamId;\n    }\n  });\n  return participantTeam;\n}\n\nfunction getPlayerWin(match, participantId) {\n  var playerWin = false;\n  match.participants.forEach(function (participant) {\n    if (participant.participantId == participantId) {\n      playerWin = participant.stats.win;\n    }\n  });\n  return playerWin;\n}\n\nfunction getPlayerChamp(match, participantId) {\n  var playerChamp = undefined;\n  match.participants.forEach(function (participant) {\n    if (participant.participantId == participantId) {\n      playerChamp = participant.championId;\n    }\n  });\n  return playerChamp;\n}\n\nMatchUtils.getPlayerChamp = getPlayerChamp;\n\nfunction getPlayerChampLevel(match, participantId) {\n  var playerChampLevel = undefined;\n\n  (function (participant) {\n    if (participant.participantId == participantId) {\n      playerChampLevel = participant.stats.champLevel;\n    }\n  });\n\n  return playerChampLevel;\n}\n\nfunction getPlayerPerformance(match, participantId) {\n  var performance = undefined;\n  match.participants.forEach(function (participant) {\n    if (participant.participantId == participantId) {\n      performance = {\n        kills: participant.stats.kills,\n        deaths: participant.stats.deaths,\n        assists: participant.stats.assists,\n        farm: participant.stats.totalMinionsKilled,\n        gold: participant.stats.goldEarned,\n        wards: participant.stats.wardsPlaced,\n        damageDealt: participant.stats.totalDamageDealtToChampions\n      };\n    }\n  });\n  return performance;\n}\n\nMatchUtils.getPlayerPerformance = getPlayerPerformance;\n\nfunction getPlayerSummonerSpells(_x, _x2, _x3, _x4, _x5) {\n  return _getPlayerSummonerSpells.apply(this, arguments);\n}\n\nfunction _getPlayerSummonerSpells() {\n  _getPlayerSummonerSpells = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(match, participantId, version, lang, kayn) {\n    var playerSpells, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, participant, spell1, spell2;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            playerSpells = undefined;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context2.prev = 3;\n            _iterator = _asyncIterator(match.participants);\n\n          case 5:\n            _context2.next = 7;\n            return _iterator.next();\n\n          case 7:\n            _step = _context2.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context2.next = 11;\n            return _step.value;\n\n          case 11:\n            _value = _context2.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context2.next = 25;\n              break;\n            }\n\n            participant = _value;\n\n            if (!(participant.participantId == participantId)) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 17;\n            return _SummonerSpellUtils[\"default\"].getSummonerSpellInfo(participant.spell1Id, version, lang, kayn);\n\n          case 17:\n            spell1 = _context2.sent;\n            _context2.next = 20;\n            return _SummonerSpellUtils[\"default\"].getSummonerSpellInfo(participant.spell2Id, version, lang, kayn);\n\n          case 20:\n            spell2 = _context2.sent;\n            playerSpells = [spell1, spell2];\n\n          case 22:\n            _iteratorNormalCompletion = true;\n            _context2.next = 5;\n            break;\n\n          case 25:\n            _context2.next = 31;\n            break;\n\n          case 27:\n            _context2.prev = 27;\n            _context2.t0 = _context2[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 31:\n            _context2.prev = 31;\n            _context2.prev = 32;\n\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context2.next = 36;\n              break;\n            }\n\n            _context2.next = 36;\n            return _iterator[\"return\"]();\n\n          case 36:\n            _context2.prev = 36;\n\n            if (!_didIteratorError) {\n              _context2.next = 39;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 39:\n            return _context2.finish(36);\n\n          case 40:\n            return _context2.finish(31);\n\n          case 41:\n            return _context2.abrupt(\"return\", playerSpells);\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 27, 31, 41], [32,, 36, 40]]);\n  }));\n  return _getPlayerSummonerSpells.apply(this, arguments);\n}\n\nfunction getPlayerItems(_x6, _x7, _x8, _x9, _x10) {\n  return _getPlayerItems.apply(this, arguments);\n}\n\nfunction _getPlayerItems() {\n  _getPlayerItems = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(match, participantId, version, lang, kayn) {\n    var playerItems, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, participant, item0, item1, item2, item3, item4, item5, item6;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            playerItems = undefined;\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context3.prev = 3;\n            _iterator2 = _asyncIterator(match.participants);\n\n          case 5:\n            _context3.next = 7;\n            return _iterator2.next();\n\n          case 7:\n            _step2 = _context3.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context3.next = 11;\n            return _step2.value;\n\n          case 11:\n            _value2 = _context3.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context3.next = 29;\n              break;\n            }\n\n            participant = _value2;\n\n            if (!(participant.participantId == participantId)) {\n              _context3.next = 26;\n              break;\n            }\n\n            item0 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item0, version, lang, kayn);\n            item1 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item1, version, lang, kayn);\n            item2 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item2, version, lang, kayn);\n            item3 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item3, version, lang, kayn);\n            item4 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item4, version, lang, kayn);\n            item5 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item5, version, lang, kayn);\n            item6 = _ItemUtils[\"default\"].getItemInfo(participant.stats.item6, version, lang, kayn);\n            _context3.next = 24;\n            return Promise.all([item0, item1, item2, item3, item4, item5, item6]);\n\n          case 24:\n            playerItems = _context3.sent;\n            return _context3.abrupt(\"break\", 29);\n\n          case 26:\n            _iteratorNormalCompletion2 = true;\n            _context3.next = 5;\n            break;\n\n          case 29:\n            _context3.next = 35;\n            break;\n\n          case 31:\n            _context3.prev = 31;\n            _context3.t0 = _context3[\"catch\"](3);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context3.t0;\n\n          case 35:\n            _context3.prev = 35;\n            _context3.prev = 36;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null)) {\n              _context3.next = 40;\n              break;\n            }\n\n            _context3.next = 40;\n            return _iterator2[\"return\"]();\n\n          case 40:\n            _context3.prev = 40;\n\n            if (!_didIteratorError2) {\n              _context3.next = 43;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 43:\n            return _context3.finish(40);\n\n          case 44:\n            return _context3.finish(35);\n\n          case 45:\n            return _context3.abrupt(\"return\", playerItems);\n\n          case 46:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 31, 35, 45], [36,, 40, 44]]);\n  }));\n  return _getPlayerItems.apply(this, arguments);\n}\n\nMatchUtils.extractPlayerData =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(match, summoner, version, lang, kayn) {\n    var participantId, playerTeam, playerWin, playerChamp, playerChampLevel, champInfo, performance, summonerSpells, playerItems, player;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            participantId = getSummonerParticipantId(match, summoner);\n            playerTeam = getParticipantTeam(match, participantId);\n            playerWin = getPlayerWin(match, participantId);\n            playerChamp = getPlayerChamp(match, participantId);\n            playerChampLevel = getPlayerChampLevel(match, participantId);\n            _context.next = 7;\n            return _ChampUtils[\"default\"].getChampInfoById(playerChamp, version, lang, kayn);\n\n          case 7:\n            champInfo = _context.sent;\n            performance = getPlayerPerformance(match, participantId);\n            _context.next = 11;\n            return getPlayerSummonerSpells(match, participantId, version, lang, kayn);\n\n          case 11:\n            summonerSpells = _context.sent;\n            _context.next = 14;\n            return getPlayerItems(match, participantId, version, lang, kayn);\n\n          case 14:\n            playerItems = _context.sent;\n            player = {\n              gameId: match.gameId,\n              gameDuration: match.gameDuration,\n              gameCreation: match.gameCreation,\n              participantId: participantId,\n              win: playerWin,\n              performance: performance,\n              champ: champInfo,\n              level: playerChampLevel,\n              spells: summonerSpells,\n              items: playerItems\n            };\n            return _context.abrupt(\"return\", player);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x11, _x12, _x13, _x14, _x15) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = MatchUtils;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "MatchUtils.js"
      ],
      "names": [
        "MatchUtils",
        "getSummonerParticipantId",
        "match",
        "summoner",
        "participantId",
        "undefined",
        "participantIdentities",
        "forEach",
        "participant",
        "player",
        "summonerName",
        "getParticipantSummonerName",
        "getParticipantTeam",
        "participantTeam",
        "participants",
        "teamId",
        "getPlayerWin",
        "playerWin",
        "stats",
        "win",
        "getPlayerChamp",
        "playerChamp",
        "championId",
        "getPlayerChampLevel",
        "playerChampLevel",
        "champLevel",
        "getPlayerPerformance",
        "performance",
        "kills",
        "deaths",
        "assists",
        "farm",
        "totalMinionsKilled",
        "gold",
        "goldEarned",
        "wards",
        "wardsPlaced",
        "damageDealt",
        "totalDamageDealtToChampions",
        "getPlayerSummonerSpells",
        "version",
        "lang",
        "kayn",
        "playerSpells",
        "SummonerSpellUtils",
        "getSummonerSpellInfo",
        "spell1Id",
        "spell1",
        "spell2Id",
        "spell2",
        "getPlayerItems",
        "playerItems",
        "item0",
        "ItemUtils",
        "getItemInfo",
        "item1",
        "item2",
        "item3",
        "item4",
        "item5",
        "item6",
        "Promise",
        "all",
        "extractPlayerData",
        "playerTeam",
        "ChampUtils",
        "getChampInfoById",
        "champInfo",
        "summonerSpells",
        "gameId",
        "gameDuration",
        "gameCreation",
        "champ",
        "level",
        "spells",
        "items"
      ],
      "mappings": "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",
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "sourcesContent": [
        "import ChampUtils from './ChampUtils';\nimport SummonerSpellUtils from './SummonerSpellUtils';\nimport ItemUtils from './ItemUtils';\n\nvar MatchUtils = { };\n\nfunction getSummonerParticipantId(match,summoner){\n\n    let participantId = undefined;\n\n    match.participantIdentities.forEach(\n        participant => {\n\n            if(participant.player.summonerName == summoner){\n\n                participantId = participant.participantId;\n\n            }\n\n        }\n    );\n\n    return participantId;\n\n}\n\nfunction getParticipantSummonerName(match,participantId){\n\n    let summoner = undefined;\n\n    match.participantIdentities.forEach(\n        participant => {\n\n            if(participant.participantId == participantId){\n\n                summoner = participant.player.summonerName;\n\n            }\n\n        }\n    );\n\n    return summoner;\n\n}\n\nMatchUtils.getSummonerParticipantId = getSummonerParticipantId; \n\nMatchUtils.getParticipantSummonerName = getParticipantSummonerName;\n\nfunction getParticipantTeam(match,participantId){\n\n    let participantTeam = undefined;\n\n    match.participants.forEach(\n        participant => {\n            if(participant.participantId == participantId){\n\n                participantTeam = participant.teamId;\n\n            }\n        }\n    );\n\n    return participantTeam;\n\n}\n\nfunction getPlayerWin(match,participantId){\n\n    let playerWin = false;\n    \n\n\n    match.participants.forEach(\n        participant => {\n            if(participant.participantId == participantId){\n\n                playerWin = participant.stats.win;\n\n\n            }\n        }\n    );\n\n    return playerWin;\n\n}\n\nfunction getPlayerChamp(match,participantId){\n\n    let playerChamp = undefined;\n\n    match.participants.forEach(\n        participant => {\n            if(participant.participantId == participantId){\n\n                playerChamp = participant.championId;\n\n            }\n        }\n    );\n\n    return playerChamp;\n\n\n}\n\nMatchUtils.getPlayerChamp = getPlayerChamp;\n\nfunction getPlayerChampLevel(match,participantId){\n\n    let playerChampLevel = undefined;\n\n    participant => {\n        if(participant.participantId == participantId){\n\n            playerChampLevel = participant.stats.champLevel;\n\n        }\n    }\n\n    return playerChampLevel;\n\n}\n\nfunction getPlayerPerformance(match,participantId){\n\n    let performance = undefined;\n\n    match.participants.forEach(\n        participant => {\n            if(participant.participantId == participantId){\n\n                performance = { kills:participant.stats.kills, \n                                deaths:participant.stats.deaths, \n                                assists:participant.stats.assists,\n                                farm:participant.stats.totalMinionsKilled,\n                                gold:participant.stats.goldEarned,\n                                wards:participant.stats.wardsPlaced,\n                                damageDealt:participant.stats.totalDamageDealtToChampions };\n\n            }\n        }\n    );\n\n    return performance;\n\n}\n\nMatchUtils.getPlayerPerformance = getPlayerPerformance;\n\nasync function getPlayerSummonerSpells(match,participantId,version,lang,kayn){\n\n    let playerSpells = undefined;\n\n    for await (let participant of match.participants){\n\n        if(participant.participantId == participantId){\n\n            let spell1 = await SummonerSpellUtils.getSummonerSpellInfo(participant.spell1Id,version,lang,kayn);\n            let spell2 = await SummonerSpellUtils.getSummonerSpellInfo(participant.spell2Id,version,lang,kayn);\n\n            playerSpells = [ spell1,spell2 ];\n\n\n        }\n\n    }\n\n    return playerSpells;\n\n}\n\nasync function getPlayerItems(match,participantId,version,lang,kayn){\n\n    let playerItems = undefined;\n\n    for await (let participant of match.participants){\n\n        if(participant.participantId == participantId){\n\n\n            let item0 = ItemUtils.getItemInfo(participant.stats.item0,version,lang,kayn);\n            let item1 = ItemUtils.getItemInfo(participant.stats.item1,version,lang,kayn);\n            let item2 = ItemUtils.getItemInfo(participant.stats.item2,version,lang,kayn);\n            let item3 = ItemUtils.getItemInfo(participant.stats.item3,version,lang,kayn);\n            let item4 = ItemUtils.getItemInfo(participant.stats.item4,version,lang,kayn);\n            let item5 = ItemUtils.getItemInfo(participant.stats.item5,version,lang,kayn);\n            let item6 = ItemUtils.getItemInfo(participant.stats.item6,version,lang,kayn);\n\n\n\n\n            playerItems = await Promise.all([ item0,item1,item2,item3,item4,item5,item6 ]);\n\n\n            break;\n\n        }\n\n    }\n\n    return playerItems;\n\n\n}\n\nMatchUtils.extractPlayerData = async (match,summoner,version,lang,kayn) => {\n\n    let participantId = getSummonerParticipantId(match,summoner);\n\n    let playerTeam = getParticipantTeam(match,participantId);\n\n    let playerWin = getPlayerWin(match,participantId);\n\n    let playerChamp = getPlayerChamp(match,participantId);\n\n    let playerChampLevel = getPlayerChampLevel(match,participantId);\n\n    let champInfo = await ChampUtils.getChampInfoById(playerChamp,version,lang,kayn);\n\n    let performance = getPlayerPerformance(match,participantId);\n\n    let summonerSpells = await getPlayerSummonerSpells(match,participantId,version,lang,kayn);\n\n    let playerItems = await getPlayerItems(match,participantId,version,lang,kayn);\n\n    let player = { gameId:match.gameId, gameDuration:match.gameDuration, gameCreation:match.gameCreation, participantId:participantId, win:playerWin, performance, champ:champInfo, level:playerChampLevel, spells:summonerSpells, items:playerItems };\n    \n    return player\n\n};\n\nexport default MatchUtils;"
      ]
    },
    "sourceType": "script",
    "mtime": 1574642427581
  },
  "{\"sourceRoot\":\"/media/igor/DATA/Code/LoL Master/backend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/DATA/Code/LoL Master/backend\",\"filename\":\"/media/igor/DATA/Code/LoL Master/backend/src/util/ChampUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/DATA/Code/LoL Master/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/DATA/Code/LoL Master/backend",
      "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/ChampUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/igor/DATA/Code/LoL Master/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/DATA/Code/LoL Master/backend/src/util/ChampUtils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/ChampUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
        "sourceFileName": "ChampUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar ChampUtils = {};\n\nChampUtils.getChampInfoById =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(champId, version, lang, kayn) {\n    var championIdMap, champion, description, name, id, imgUrl, champInfo;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return kayn.DDragon.Champion.listDataByIdWithParentAsId().version(version).locale(lang);\n\n          case 2:\n            championIdMap = _context.sent;\n            champion = championIdMap.data[champId];\n            description = champion.blurb;\n            name = champion.key;\n            id = champion.id;\n            imgUrl = \"http://ddragon.leagueoflegends.com/cdn/\".concat(version, \"/img/champion/\").concat(name, \".png\");\n            champInfo = {\n              id: id,\n              name: name,\n              description: description,\n              imgUrl: imgUrl\n            };\n            return _context.abrupt(\"return\", champInfo);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nChampUtils.getChampPerformance =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(summonerName, champId, kayn) {\n    var processMatch, championIdMap, champName, _ref4, id, accountId, _ref5, matches, gameIds, matchDtos, processor, results, champMastery, championPerf;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            processMatch = function processMatch(championIdMap, summonerId, match) {\n              var _match$participantIde = match.participantIdentities.find(function (pi) {\n                return pi.player.summonerId === summonerId;\n              }),\n                  participantId = _match$participantIde.participantId;\n\n              var participant = match.participants.find(function (p) {\n                return p.participantId === participantId;\n              });\n              var champion = championIdMap.data[participant.championId];\n              return {\n                gameCreation: match.gameCreation,\n                seasonId: match.seasonId,\n                didWin: participant.teamId === match.teams.find(function (_ref3) {\n                  var win = _ref3.win;\n                  return win === 'Win';\n                }).teamId,\n                championId: participant.championId,\n                championName: champion.name\n              };\n            };\n\n            _context2.next = 3;\n            return kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n          case 3:\n            championIdMap = _context2.sent;\n            champName = championIdMap.data[champId].name;\n            _context2.next = 7;\n            return kayn.Summoner.by.name(summonerName);\n\n          case 7:\n            _ref4 = _context2.sent;\n            id = _ref4.id;\n            accountId = _ref4.accountId;\n            _context2.prev = 10;\n            _context2.next = 13;\n            return kayn.Matchlist.by.accountID(accountId).query({\n              queue: 420,\n              champion: champId\n            });\n\n          case 13:\n            _ref5 = _context2.sent;\n            matches = _ref5.matches;\n            gameIds = matches.slice(0, 10).map(function (_ref6) {\n              var gameId = _ref6.gameId;\n              return gameId;\n            });\n            _context2.next = 18;\n            return Promise.all(gameIds.map(kayn.Match.get));\n\n          case 18:\n            matchDtos = _context2.sent;\n\n            processor = function processor(match) {\n              return processMatch(championIdMap, id, match);\n            };\n\n            _context2.next = 22;\n            return Promise.all(matchDtos.map(processor));\n\n          case 22:\n            results = _context2.sent;\n            champMastery = undefined;\n            _context2.prev = 24;\n            _context2.next = 27;\n            return kayn.ChampionMasteryV4.get(id)(champId);\n\n          case 27:\n            champMastery = _context2.sent;\n            _context2.next = 33;\n            break;\n\n          case 30:\n            _context2.prev = 30;\n            _context2.t0 = _context2[\"catch\"](24);\n            champMastery = {\n              championLevel: 0,\n              championPoints: 0\n            };\n\n          case 33:\n            championPerf = {\n              winRate: 0,\n              gamesWon: 0,\n              gamesLost: 0,\n              summonerName: summonerName,\n              championId: champId,\n              championName: champName,\n              championMastery: champMastery.championLevel,\n              championMasteryPoints: champMastery.championPoints\n            };\n            results.forEach(function (match) {\n              if (!!match.didWin) {\n                championPerf.gamesWon++;\n              } else {\n                championPerf.gamesLost++;\n              }\n            });\n\n            if (championPerf.gamesWon > 0) {\n              championPerf.winRate = championPerf.gamesWon / results.length;\n            }\n\n            return _context2.abrupt(\"return\", championPerf);\n\n          case 39:\n            _context2.prev = 39;\n            _context2.t1 = _context2[\"catch\"](10);\n            return _context2.abrupt(\"return\", {\n              winRate: 0,\n              gamesWon: 0,\n              gamesLost: 0,\n              summonerName: summonerName,\n              championId: champId,\n              championName: champName,\n              championMastery: 0,\n              championMasteryPoints: 0\n            });\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[10, 39], [24, 30]]);\n  }));\n\n  return function (_x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _default = ChampUtils;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ChampUtils.js"
      ],
      "names": [
        "ChampUtils",
        "getChampInfoById",
        "champId",
        "version",
        "lang",
        "kayn",
        "DDragon",
        "Champion",
        "listDataByIdWithParentAsId",
        "locale",
        "championIdMap",
        "champion",
        "data",
        "description",
        "blurb",
        "name",
        "key",
        "id",
        "imgUrl",
        "champInfo",
        "getChampPerformance",
        "summonerName",
        "processMatch",
        "summonerId",
        "match",
        "participantIdentities",
        "find",
        "pi",
        "player",
        "participantId",
        "participant",
        "participants",
        "p",
        "championId",
        "gameCreation",
        "seasonId",
        "didWin",
        "teamId",
        "teams",
        "win",
        "championName",
        "champName",
        "Summoner",
        "by",
        "accountId",
        "Matchlist",
        "accountID",
        "query",
        "queue",
        "matches",
        "gameIds",
        "slice",
        "map",
        "gameId",
        "Promise",
        "all",
        "Match",
        "get",
        "matchDtos",
        "processor",
        "results",
        "champMastery",
        "undefined",
        "ChampionMasteryV4",
        "championLevel",
        "championPoints",
        "championPerf",
        "winRate",
        "gamesWon",
        "gamesLost",
        "championMastery",
        "championMasteryPoints",
        "forEach",
        "length"
      ],
      "mappings": "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",
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "sourcesContent": [
        "var ChampUtils = {};\n\nChampUtils.getChampInfoById = async (champId, version, lang, kayn) => {\n\n    const championIdMap = await kayn.DDragon.Champion.listDataByIdWithParentAsId().version(version).locale(lang);\n\n    const champion = championIdMap.data[champId];\n\n    let description = champion.blurb;\n    let name = champion.key;\n    let id = champion.id;\n    let imgUrl = `http://ddragon.leagueoflegends.com/cdn/${version}/img/champion/${name}.png`;\n\n    let champInfo = { id, name, description, imgUrl };\n\n    return champInfo;\n\n}\n\nChampUtils.getChampPerformance = async (summonerName, champId, kayn) => {\n\n    const processMatch = (championIdMap, summonerId, match) => {\n        const { participantId } = match.participantIdentities.find(\n            pi => pi.player.summonerId === summonerId,\n        )\n        const participant = match.participants.find(\n            p => p.participantId === participantId,\n        )\n        const champion = championIdMap.data[participant.championId]\n        return {\n            gameCreation: match.gameCreation,\n            seasonId: match.seasonId,\n            didWin:\n                participant.teamId ===\n                match.teams.find(({ win }) => win === 'Win').teamId,\n            championId: participant.championId,\n            championName: champion.name,\n        }\n    }\n\n    const championIdMap = await kayn.DDragon.Champion.listDataByIdWithParentAsId();\n\n    const champName = championIdMap.data[champId].name;\n    const { id, accountId } = await kayn.Summoner.by.name(summonerName)\n\n    try {\n\n        const { matches } = await kayn.Matchlist.by\n            .accountID(accountId)\n            .query({ queue: 420, champion: champId });\n\n\n        const gameIds = matches.slice(0, 10).map(({ gameId }) => gameId)\n        const matchDtos = await Promise.all(gameIds.map(kayn.Match.get))\n        // `processor` is a helper function to make the subsequent `map` cleaner.\n        const processor = match => processMatch(championIdMap, id, match)\n        const results = await Promise.all(matchDtos.map(processor));\n\n        let champMastery = undefined;\n\n        try {\n\n            champMastery = await kayn.ChampionMasteryV4.get(id)(champId);\n\n        } catch (error) {\n\n            champMastery = { championLevel: 0, championPoints: 0 };\n\n        }\n\n        let championPerf = {\n\n            winRate: 0,\n            gamesWon: 0,\n            gamesLost: 0,\n            summonerName: summonerName,\n            championId: champId,\n            championName: champName,\n            championMastery: champMastery.championLevel,\n            championMasteryPoints: champMastery.championPoints\n\n        };\n\n\n        results.forEach(\n            match => {\n\n                if (!!match.didWin) {\n\n                    championPerf.gamesWon++;\n\n                } else {\n\n                    championPerf.gamesLost++;\n\n                }\n            }\n\n        );\n\n        if (championPerf.gamesWon > 0) {\n\n            championPerf.winRate = championPerf.gamesWon / results.length;\n\n        }\n\n        return championPerf;\n\n    } catch (error) {\n\n        return {\n\n            winRate: 0,\n            gamesWon: 0,\n            gamesLost: 0,\n            summonerName: summonerName,\n            championId: champId,\n            championName: champName,\n            championMastery: 0,\n            championMasteryPoints: 0\n\n        };\n\n\n    }\n\n\n\n}\n\nexport default ChampUtils;"
      ]
    },
    "sourceType": "script",
    "mtime": 1574176847869
  },
  "{\"sourceRoot\":\"/media/igor/DATA/Code/LoL Master/backend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/DATA/Code/LoL Master/backend\",\"filename\":\"/media/igor/DATA/Code/LoL Master/backend/src/util/SummonerSpellUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/DATA/Code/LoL Master/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/DATA/Code/LoL Master/backend",
      "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/SummonerSpellUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/igor/DATA/Code/LoL Master/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/DATA/Code/LoL Master/backend/src/util/SummonerSpellUtils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/SummonerSpellUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
        "sourceFileName": "SummonerSpellUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar SummonerSpellUtils = {};\n\nSummonerSpellUtils.getSummonerSpellInfo =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(spellId, version, lang, kayn) {\n    var summonerSpellInfo, _ref2, summonerSpells;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            summonerSpellInfo = undefined;\n            _context.next = 3;\n            return kayn.DDragon.SummonerSpell.list();\n\n          case 3:\n            _ref2 = _context.sent;\n            summonerSpells = _ref2.data;\n            Object.keys(summonerSpells).forEach(function (spellName) {\n              var summonerSpell = summonerSpells[spellName];\n\n              if (summonerSpell.key == spellId) {\n                var name = summonerSpell.name;\n                var imgUrl = \"http://ddragon.leagueoflegends.com/cdn/\".concat(version, \"/img/spell/\").concat(summonerSpell.id, \".png \");\n                summonerSpellInfo = {\n                  name: name,\n                  imgUrl: imgUrl\n                };\n              }\n            });\n            return _context.abrupt(\"return\", summonerSpellInfo);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = SummonerSpellUtils;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1bW1vbmVyU3BlbGxVdGlscy5qcyJdLCJuYW1lcyI6WyJTdW1tb25lclNwZWxsVXRpbHMiLCJnZXRTdW1tb25lclNwZWxsSW5mbyIsInNwZWxsSWQiLCJ2ZXJzaW9uIiwibGFuZyIsImtheW4iLCJzdW1tb25lclNwZWxsSW5mbyIsInVuZGVmaW5lZCIsIkREcmFnb24iLCJTdW1tb25lclNwZWxsIiwibGlzdCIsInN1bW1vbmVyU3BlbGxzIiwiZGF0YSIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwic3BlbGxOYW1lIiwic3VtbW9uZXJTcGVsbCIsImtleSIsIm5hbWUiLCJpbWdVcmwiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxrQkFBa0IsR0FBRyxFQUF6Qjs7QUFFQUEsa0JBQWtCLENBQUNDLG9CQUFuQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQTBDLGlCQUFPQyxPQUFQLEVBQWVDLE9BQWYsRUFBdUJDLElBQXZCLEVBQTRCQyxJQUE1QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWxDQyxZQUFBQSxpQkFGa0MsR0FFZEMsU0FGYztBQUFBO0FBQUEsbUJBSUFGLElBQUksQ0FBQ0csT0FBTCxDQUFhQyxhQUFiLENBQTJCQyxJQUEzQixFQUpBOztBQUFBO0FBQUE7QUFJekJDLFlBQUFBLGNBSnlCLFNBSTlCQyxJQUo4QjtBQU90Q0MsWUFBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVlILGNBQVosRUFBNEJJLE9BQTVCLENBQ0ksVUFBQUMsU0FBUyxFQUFJO0FBRVQsa0JBQUlDLGFBQWEsR0FBR04sY0FBYyxDQUFDSyxTQUFELENBQWxDOztBQUdBLGtCQUFJQyxhQUFhLENBQUNDLEdBQWQsSUFBcUJoQixPQUF6QixFQUFrQztBQUc5QixvQkFBSWlCLElBQUksR0FBR0YsYUFBYSxDQUFDRSxJQUF6QjtBQUNBLG9CQUFJQyxNQUFNLG9EQUE2Q2pCLE9BQTdDLHdCQUFrRWMsYUFBYSxDQUFDSSxFQUFoRixVQUFWO0FBRUFmLGdCQUFBQSxpQkFBaUIsR0FBRztBQUFFYSxrQkFBQUEsSUFBSSxFQUFKQSxJQUFGO0FBQU9DLGtCQUFBQSxNQUFNLEVBQU5BO0FBQVAsaUJBQXBCO0FBRUg7QUFHSixhQWpCTDtBQVBzQyw2Q0EyQi9CZCxpQkEzQitCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTFDOztBQUFBO0FBQUE7QUFBQTtBQUFBOztlQStCZU4sa0IiLCJzb3VyY2VSb290IjoiL21lZGlhL2lnb3IvREFUQS9Db2RlL0xvTCBNYXN0ZXIvYmFja2VuZC9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbInZhciBTdW1tb25lclNwZWxsVXRpbHMgPSB7IH07XG5cblN1bW1vbmVyU3BlbGxVdGlscy5nZXRTdW1tb25lclNwZWxsSW5mbyA9IGFzeW5jIChzcGVsbElkLHZlcnNpb24sbGFuZyxrYXluKSA9PiB7XG5cbiAgICBsZXQgc3VtbW9uZXJTcGVsbEluZm8gPSB1bmRlZmluZWQ7XG5cbiAgICBjb25zdCB7IGRhdGE6c3VtbW9uZXJTcGVsbHMgfSA9IGF3YWl0IGtheW4uRERyYWdvbi5TdW1tb25lclNwZWxsLmxpc3QoKTtcblxuXG4gICAgT2JqZWN0LmtleXMoc3VtbW9uZXJTcGVsbHMpLmZvckVhY2goXG4gICAgICAgIHNwZWxsTmFtZSA9PiB7XG5cbiAgICAgICAgICAgIGxldCBzdW1tb25lclNwZWxsID0gc3VtbW9uZXJTcGVsbHNbc3BlbGxOYW1lXTtcblxuXG4gICAgICAgICAgICBpZiAoc3VtbW9uZXJTcGVsbC5rZXkgPT0gc3BlbGxJZCkge1xuXG5cbiAgICAgICAgICAgICAgICBsZXQgbmFtZSA9IHN1bW1vbmVyU3BlbGwubmFtZTtcbiAgICAgICAgICAgICAgICBsZXQgaW1nVXJsID0gYGh0dHA6Ly9kZHJhZ29uLmxlYWd1ZW9mbGVnZW5kcy5jb20vY2RuLyR7dmVyc2lvbn0vaW1nL3NwZWxsLyR7c3VtbW9uZXJTcGVsbC5pZH0ucG5nIGA7XG5cbiAgICAgICAgICAgICAgICBzdW1tb25lclNwZWxsSW5mbyA9IHsgbmFtZSxpbWdVcmwgfTtcblxuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gc3VtbW9uZXJTcGVsbEluZm87XG5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IFN1bW1vbmVyU3BlbGxVdGlsczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "SummonerSpellUtils.js"
      ],
      "names": [
        "SummonerSpellUtils",
        "getSummonerSpellInfo",
        "spellId",
        "version",
        "lang",
        "kayn",
        "summonerSpellInfo",
        "undefined",
        "DDragon",
        "SummonerSpell",
        "list",
        "summonerSpells",
        "data",
        "Object",
        "keys",
        "forEach",
        "spellName",
        "summonerSpell",
        "key",
        "name",
        "imgUrl",
        "id"
      ],
      "mappings": ";;;;;;;;;;;AAAA,IAAIA,kBAAkB,GAAG,EAAzB;;AAEAA,kBAAkB,CAACC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0C,iBAAOC,OAAP,EAAeC,OAAf,EAAuBC,IAAvB,EAA4BC,IAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAElCC,YAAAA,iBAFkC,GAEdC,SAFc;AAAA;AAAA,mBAIAF,IAAI,CAACG,OAAL,CAAaC,aAAb,CAA2BC,IAA3B,EAJA;;AAAA;AAAA;AAIzBC,YAAAA,cAJyB,SAI9BC,IAJ8B;AAOtCC,YAAAA,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,OAA5B,CACI,UAAAC,SAAS,EAAI;AAET,kBAAIC,aAAa,GAAGN,cAAc,CAACK,SAAD,CAAlC;;AAGA,kBAAIC,aAAa,CAACC,GAAd,IAAqBhB,OAAzB,EAAkC;AAG9B,oBAAIiB,IAAI,GAAGF,aAAa,CAACE,IAAzB;AACA,oBAAIC,MAAM,oDAA6CjB,OAA7C,wBAAkEc,aAAa,CAACI,EAAhF,UAAV;AAEAf,gBAAAA,iBAAiB,GAAG;AAAEa,kBAAAA,IAAI,EAAJA,IAAF;AAAOC,kBAAAA,MAAM,EAANA;AAAP,iBAApB;AAEH;AAGJ,aAjBL;AAPsC,6CA2B/Bd,iBA3B+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1C;;AAAA;AAAA;AAAA;AAAA;;eA+BeN,kB",
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "sourcesContent": [
        "var SummonerSpellUtils = { };\n\nSummonerSpellUtils.getSummonerSpellInfo = async (spellId,version,lang,kayn) => {\n\n    let summonerSpellInfo = undefined;\n\n    const { data:summonerSpells } = await kayn.DDragon.SummonerSpell.list();\n\n\n    Object.keys(summonerSpells).forEach(\n        spellName => {\n\n            let summonerSpell = summonerSpells[spellName];\n\n\n            if (summonerSpell.key == spellId) {\n\n\n                let name = summonerSpell.name;\n                let imgUrl = `http://ddragon.leagueoflegends.com/cdn/${version}/img/spell/${summonerSpell.id}.png `;\n\n                summonerSpellInfo = { name,imgUrl };\n\n            }\n\n\n        }\n    );\n\n    return summonerSpellInfo;\n\n};\n\nexport default SummonerSpellUtils;"
      ]
    },
    "sourceType": "script",
    "mtime": 1568605824357
  },
  "{\"sourceRoot\":\"/media/igor/DATA/Code/LoL Master/backend/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/DATA/Code/LoL Master/backend\",\"filename\":\"/media/igor/DATA/Code/LoL Master/backend/src/util/ItemUtils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/DATA/Code/LoL Master/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/DATA/Code/LoL Master/backend",
      "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/ItemUtils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/igor/DATA/Code/LoL Master/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/DATA/Code/LoL Master/backend/src/util/ItemUtils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/DATA/Code/LoL Master/backend/src/util/ItemUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
        "sourceFileName": "ItemUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _kayn = require(\"kayn\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar itemsFolder = 'items';\nvar ItemUtils = {};\n\nItemUtils.getItemInfo =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(itemId, version, lang, kayn) {\n    var realm, itemsVersion, itemsJsonPath, _ref2, items, _items, item, itemInfo;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return kayn.DDragon.Realm.list(_kayn.REGIONS.BRAZIL);\n\n          case 2:\n            realm = _context.sent;\n            itemsVersion = realm.n.item;\n            itemsJsonPath = _path[\"default\"].resolve(__dirname, 'items', \"\".concat(itemsVersion, \".json\"));\n\n            if (_fs[\"default\"].existsSync(itemsJsonPath)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.prev = 6;\n            _context.next = 9;\n            return kayn.DDragon.Item.list();\n\n          case 9:\n            _ref2 = _context.sent;\n            items = _ref2.data;\n\n            _fs[\"default\"].writeFileSync(itemsJsonPath, JSON.stringify(items), 'utf-8');\n\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](6);\n            console.log(_context.t0);\n\n          case 17:\n            _context.prev = 17;\n            _items = JSON.parse(_fs[\"default\"].readFileSync(itemsJsonPath, 'utf-8'));\n            item = _items[itemId];\n            itemInfo = itemId > 0 ? {\n              name: item.name,\n              imgUrl: \"http://ddragon.leagueoflegends.com/cdn/\".concat(version, \"/img/item/\").concat(itemId, \".png\")\n            } : {\n              name: '',\n              imgUrl: ''\n            };\n            return _context.abrupt(\"return\", itemInfo);\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](17);\n            console.log(_context.t1);\n            return _context.abrupt(\"return\", undefined);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 14], [17, 24]]);\n  }));\n\n  return function (_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = ItemUtils;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW1VdGlscy5qcyJdLCJuYW1lcyI6WyJpdGVtc0ZvbGRlciIsIkl0ZW1VdGlscyIsImdldEl0ZW1JbmZvIiwiaXRlbUlkIiwidmVyc2lvbiIsImxhbmciLCJrYXluIiwiRERyYWdvbiIsIlJlYWxtIiwibGlzdCIsIlJFR0lPTlMiLCJCUkFaSUwiLCJyZWFsbSIsIml0ZW1zVmVyc2lvbiIsIm4iLCJpdGVtIiwiaXRlbXNKc29uUGF0aCIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwiZnMiLCJleGlzdHNTeW5jIiwiSXRlbSIsIml0ZW1zIiwiZGF0YSIsIndyaXRlRmlsZVN5bmMiLCJKU09OIiwic3RyaW5naWZ5IiwiY29uc29sZSIsImxvZyIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiaXRlbUluZm8iLCJuYW1lIiwiaW1nVXJsIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7Ozs7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLE9BQXBCO0FBRUEsSUFBSUMsU0FBUyxHQUFHLEVBQWhCOztBQUVBQSxTQUFTLENBQUNDLFdBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUF3QixpQkFBT0MsTUFBUCxFQUFlQyxPQUFmLEVBQXdCQyxJQUF4QixFQUE4QkMsSUFBOUI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBRUFBLElBQUksQ0FBQ0MsT0FBTCxDQUFhQyxLQUFiLENBQW1CQyxJQUFuQixDQUF3QkMsY0FBUUMsTUFBaEMsQ0FGQTs7QUFBQTtBQUVkQyxZQUFBQSxLQUZjO0FBSWRDLFlBQUFBLFlBSmMsR0FJQ0QsS0FBSyxDQUFDRSxDQUFOLENBQVFDLElBSlQ7QUFNZEMsWUFBQUEsYUFOYyxHQU1FQyxpQkFBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLE9BQXhCLFlBQW9DTixZQUFwQyxXQU5GOztBQUFBLGdCQVFmTyxlQUFHQyxVQUFILENBQWNMLGFBQWQsQ0FSZTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsbUJBWWdCVixJQUFJLENBQUNDLE9BQUwsQ0FBYWUsSUFBYixDQUFrQmIsSUFBbEIsRUFaaEI7O0FBQUE7QUFBQTtBQVlBYyxZQUFBQSxLQVpBLFNBWU5DLElBWk07O0FBZVpKLDJCQUFHSyxhQUFILENBQWlCVCxhQUFqQixFQUFnQ1UsSUFBSSxDQUFDQyxTQUFMLENBQWVKLEtBQWYsQ0FBaEMsRUFBdUQsT0FBdkQ7O0FBZlk7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFtQlpLLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjs7QUFuQlk7QUFBQTtBQTZCWk4sWUFBQUEsTUE3QlksR0E2QkpHLElBQUksQ0FBQ0ksS0FBTCxDQUFXVixlQUFHVyxZQUFILENBQWdCZixhQUFoQixFQUErQixPQUEvQixDQUFYLENBN0JJO0FBZ0NWRCxZQUFBQSxJQWhDVSxHQWdDSFEsTUFBSyxDQUFDcEIsTUFBRCxDQWhDRjtBQWtDWjZCLFlBQUFBLFFBbENZLEdBa0NEN0IsTUFBTSxHQUFHLENBQVQsR0FBYTtBQUN4QjhCLGNBQUFBLElBQUksRUFBRWxCLElBQUksQ0FBQ2tCLElBRGE7QUFFeEJDLGNBQUFBLE1BQU0sbURBQTRDOUIsT0FBNUMsdUJBQWdFRCxNQUFoRTtBQUZrQixhQUFiLEdBR1g7QUFBRThCLGNBQUFBLElBQUksRUFBRSxFQUFSO0FBQVlDLGNBQUFBLE1BQU0sRUFBRTtBQUFwQixhQXJDWTtBQUFBLDZDQXVDVEYsUUF2Q1M7O0FBQUE7QUFBQTtBQUFBO0FBMkNoQkosWUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBM0NnQiw2Q0E2Q1RNLFNBN0NTOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXhCOztBQUFBO0FBQUE7QUFBQTtBQUFBOztlQW1EZWxDLFMiLCJzb3VyY2VSb290IjoiL21lZGlhL2lnb3IvREFUQS9Db2RlL0xvTCBNYXN0ZXIvYmFja2VuZC9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuaW1wb3J0IHsgUkVHSU9OUyB9IGZyb20gJ2theW4nO1xuXG5jb25zdCBpdGVtc0ZvbGRlciA9ICdpdGVtcyc7XG5cbnZhciBJdGVtVXRpbHMgPSB7fTtcblxuSXRlbVV0aWxzLmdldEl0ZW1JbmZvID0gYXN5bmMgKGl0ZW1JZCwgdmVyc2lvbiwgbGFuZywga2F5bikgPT4ge1xuXG4gICAgY29uc3QgcmVhbG0gPSBhd2FpdCBrYXluLkREcmFnb24uUmVhbG0ubGlzdChSRUdJT05TLkJSQVpJTCk7XG5cbiAgICBjb25zdCBpdGVtc1ZlcnNpb24gPSByZWFsbS5uLml0ZW07XG5cbiAgICBjb25zdCBpdGVtc0pzb25QYXRoID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJ2l0ZW1zJywgYCR7aXRlbXNWZXJzaW9ufS5qc29uYCk7XG5cbiAgICBpZiAoIWZzLmV4aXN0c1N5bmMoaXRlbXNKc29uUGF0aCkpIHtcblxuICAgICAgICB0cnkge1xuXG4gICAgICAgICAgICBsZXQgeyBkYXRhOiBpdGVtcyB9ID0gYXdhaXQga2F5bi5ERHJhZ29uLkl0ZW0ubGlzdCgpO1xuXG5cbiAgICAgICAgICAgIGZzLndyaXRlRmlsZVN5bmMoaXRlbXNKc29uUGF0aCwgSlNPTi5zdHJpbmdpZnkoaXRlbXMpLCAndXRmLTgnKTtcblxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG5cbiAgICAgICAgfVxuXG5cbiAgICB9XG5cblxuICAgIHRyeSB7XG5cbiAgICAgICAgbGV0IGl0ZW1zID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoaXRlbXNKc29uUGF0aCwgJ3V0Zi04JykpO1xuXG5cbiAgICAgICAgY29uc3QgaXRlbSA9IGl0ZW1zW2l0ZW1JZF07XG5cbiAgICAgICAgbGV0IGl0ZW1JbmZvID0gaXRlbUlkID4gMCA/IHtcbiAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSxcbiAgICAgICAgICAgIGltZ1VybDogYGh0dHA6Ly9kZHJhZ29uLmxlYWd1ZW9mbGVnZW5kcy5jb20vY2RuLyR7dmVyc2lvbn0vaW1nL2l0ZW0vJHtpdGVtSWR9LnBuZ2BcbiAgICAgICAgfSA6IHsgbmFtZTogJycsIGltZ1VybDogJycgfTtcblxuICAgICAgICByZXR1cm4gaXRlbUluZm87XG5cbiAgICB9IGNhdGNoIChlKSB7XG5cbiAgICAgICAgY29uc29sZS5sb2coZSk7XG5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG5cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgSXRlbVV0aWxzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ItemUtils.js"
      ],
      "names": [
        "itemsFolder",
        "ItemUtils",
        "getItemInfo",
        "itemId",
        "version",
        "lang",
        "kayn",
        "DDragon",
        "Realm",
        "list",
        "REGIONS",
        "BRAZIL",
        "realm",
        "itemsVersion",
        "n",
        "item",
        "itemsJsonPath",
        "path",
        "resolve",
        "__dirname",
        "fs",
        "existsSync",
        "Item",
        "items",
        "data",
        "writeFileSync",
        "JSON",
        "stringify",
        "console",
        "log",
        "parse",
        "readFileSync",
        "itemInfo",
        "name",
        "imgUrl",
        "undefined"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,OAApB;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AAEAA,SAAS,CAACC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB,iBAAOC,MAAP,EAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,IAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEAA,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmBC,IAAnB,CAAwBC,cAAQC,MAAhC,CAFA;;AAAA;AAEdC,YAAAA,KAFc;AAIdC,YAAAA,YAJc,GAICD,KAAK,CAACE,CAAN,CAAQC,IAJT;AAMdC,YAAAA,aANc,GAMEC,iBAAKC,OAAL,CAAaC,SAAb,EAAwB,OAAxB,YAAoCN,YAApC,WANF;;AAAA,gBAQfO,eAAGC,UAAH,CAAcL,aAAd,CARe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAYgBV,IAAI,CAACC,OAAL,CAAae,IAAb,CAAkBb,IAAlB,EAZhB;;AAAA;AAAA;AAYAc,YAAAA,KAZA,SAYNC,IAZM;;AAeZJ,2BAAGK,aAAH,CAAiBT,aAAjB,EAAgCU,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAhC,EAAuD,OAAvD;;AAfY;AAAA;;AAAA;AAAA;AAAA;AAmBZK,YAAAA,OAAO,CAACC,GAAR;;AAnBY;AAAA;AA6BZN,YAAAA,MA7BY,GA6BJG,IAAI,CAACI,KAAL,CAAWV,eAAGW,YAAH,CAAgBf,aAAhB,EAA+B,OAA/B,CAAX,CA7BI;AAgCVD,YAAAA,IAhCU,GAgCHQ,MAAK,CAACpB,MAAD,CAhCF;AAkCZ6B,YAAAA,QAlCY,GAkCD7B,MAAM,GAAG,CAAT,GAAa;AACxB8B,cAAAA,IAAI,EAAElB,IAAI,CAACkB,IADa;AAExBC,cAAAA,MAAM,mDAA4C9B,OAA5C,uBAAgED,MAAhE;AAFkB,aAAb,GAGX;AAAE8B,cAAAA,IAAI,EAAE,EAAR;AAAYC,cAAAA,MAAM,EAAE;AAApB,aArCY;AAAA,6CAuCTF,QAvCS;;AAAA;AAAA;AAAA;AA2ChBJ,YAAAA,OAAO,CAACC,GAAR;AA3CgB,6CA6CTM,SA7CS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;eAmDelC,S",
      "sourceRoot": "/media/igor/DATA/Code/LoL Master/backend/src/util",
      "sourcesContent": [
        "import fs from 'fs';\nimport path from 'path';\n\nimport { REGIONS } from 'kayn';\n\nconst itemsFolder = 'items';\n\nvar ItemUtils = {};\n\nItemUtils.getItemInfo = async (itemId, version, lang, kayn) => {\n\n    const realm = await kayn.DDragon.Realm.list(REGIONS.BRAZIL);\n\n    const itemsVersion = realm.n.item;\n\n    const itemsJsonPath = path.resolve(__dirname, 'items', `${itemsVersion}.json`);\n\n    if (!fs.existsSync(itemsJsonPath)) {\n\n        try {\n\n            let { data: items } = await kayn.DDragon.Item.list();\n\n\n            fs.writeFileSync(itemsJsonPath, JSON.stringify(items), 'utf-8');\n\n        } catch (error) {\n\n            console.log(error);\n\n        }\n\n\n    }\n\n\n    try {\n\n        let items = JSON.parse(fs.readFileSync(itemsJsonPath, 'utf-8'));\n\n\n        const item = items[itemId];\n\n        let itemInfo = itemId > 0 ? {\n            name: item.name,\n            imgUrl: `http://ddragon.leagueoflegends.com/cdn/${version}/img/item/${itemId}.png`\n        } : { name: '', imgUrl: '' };\n\n        return itemInfo;\n\n    } catch (e) {\n\n        console.log(e);\n\n        return undefined;\n    }\n\n\n};\n\nexport default ItemUtils;"
      ]
    },
    "sourceType": "script",
    "mtime": 1568605362319
  }
}